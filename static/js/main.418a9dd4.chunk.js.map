{"version":3,"sources":["simulation/worker.js","ui/reducers/gui.js","ui/actions/index.js","ui/components/Controls.jsx","app/Camera.js","simulation/CellularAutomaton3D.js","gl/Texture3D.js","gl/Texture2D.js","app/rendering/SimulationRenderer.js","app/rendering/ColourMaps.js","gl/Shader.js","gl/VertexBuffer.js","gl/IndexBuffer.js","gl/Uniform.js","app/rendering/shaders/border.js","gl/CubeData.js","app/rendering/BoundingBox.js","ui/util/AdjustableValues.js","app/rendering/Border.js","app/rendering/renderers/Renderer.js","app/rendering/shaders/volume.js","app/rendering/renderers/VolumeRenderer.js","app/rendering/shaders/fragment_shader.js","app/rendering/shaders/vertex_shader.js","app/rendering/renderers/PointCloudRenderer.js","app/rendering/renderers/VoxelRenderer.js","app/rendering/ShaderManager.js","simulation/Serialised.js","app/RuleReader.js","app/entry_browser/Entry.js","app/entry_browser/DefaultEntryBrowser.js","app/entry_browser/StoredEntryBrowser.js","app/entry_browser/EntryBrowser.js","app/Statistics.js","app/RandomiserManager.js","app/Observable.js","app/App.js","ui/components/SimulationView/MouseController.js","ui/components/SimulationView/TouchScreenController.js","ui/components/SimulationView/Canvas.jsx","ui/reducers/index.js","ui/reducers/randomiser_manager.js","ui/reducers/statistics.js","ui/reducers/shader_manager.js","ui/reducers/entry_manager.js","ui/reducers/app.js","ui/components/SimulationView/FullScreenButton.jsx","ui/components/SimulationView/SimulationView.jsx","ui/components/EntryBrowser/EntryEditor.jsx","ui/components/EntryBrowser/EntryView.jsx","ui/components/EntryBrowser/Entry.jsx","ui/components/EntryBrowser/AddButton.jsx","ui/components/EntryBrowser/EntryBrowser.jsx","ui/util/Help.jsx","ui/util/ColorPicker.jsx","ui/util/AdjustableValueViews.jsx","ui/components/GraphicsControls.jsx","ui/components/ShaderMenu.jsx","ui/components/SizeChanger.jsx","ui/components/Statistics.jsx","ui/components/Randomiser.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["module","exports","Worker","gui_reducer","init","default_settings","_objectSpread","fullscreen","focused","settings","arguments","length","undefined","action","type","value","sim","set_fullscreen","Controls","is_running","useSelector","state","app","dispatch","useDispatch","on_off","run_btn","React","createElement","className","onClick","Camera","size","_this","_classCallCheck","this","fov","aspect_ratio","view_position","vec3","fromValues","look_position","create","target","model_translation","model","mat4","view","projection","on_size_change","listen","update","_createClass","key","scale","distance","Math","max","apply","_toConsumableArray","min_index","list","min_i","min_val","i","val","argmin","identity","translate","lookAt","perspective","PI","dx","dy","rotation","rotateY","xz_plane_direction","sub","rotate","transformMat4","delta","diff","add","CellularAutomaton3D","stats","worker","promise_id","set_size","addEventListener","event","msg","data","error","console","recieve","notify","grid","local","ev","message","listeners","Set","_step","_iterator","_createForOfIteratorHelper","s","n","done","listener","err","e","f","set_grid","delete","use_worker","rule","randomiser","stop","start","transferables","id","postMessage","Texture3D","gl","shape","texture","createTexture","bindTexture","TEXTURE_3D","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_WRAP_R","pixelStorei","UNPACK_ALIGNMENT","texImage3D","RG8","RG","UNSIGNED_BYTE","slot","activeTexture","TEXTURE0","Texture2D","TEXTURE_2D","texImage2D","RGBA8","RGBA","_regeneratorRuntime","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","_marked","range","SimulationRenderer","shader_manager","max_neighbours","data_updated","listen_available_frame","unprocessed_blocks","update_texture_buffer","_size","_slicedToArray","x","y","z","total_cells","create_textures","state_colour_texture","state_colours_data","Uint8Array","total_states","offset","hue","_colorsys$hsv_to_rgb","colorsys","hsv_to_rgb","r","g","b","create_states_texture","radius_colour_texture","_colorsys$hsv_to_rgb2","create_radius_texture","cell_data_width","cell_data","cell_data_texture","items","render_updates","count","cells","neighbours","total_items","performance","now","width","neighbour","floor","min","end","_this$size$value","texSubImage3D","bind","request_frame","load_texture_data","on_render","_context","Shader","vertex_shader_src","fragment_shader_src","create_shader_program","uniforms","locations","_create_program","vertex_shader","createShader","VERTEX_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","prepend_line_numbers","fragment_shader","FRAGMENT_SHADER","program","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","create_program","_create_program2","uniform","location","getUniformLocation","useProgram","src","split","map","v","concat","join","VertexBufferObject","usage","vbo","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","VertexArrayObject","vao","createVertexArray","integer_types","INT","UNSIGNED_INT","layout","attributes","attribute","enableVertexAttribArray","index","has","vertexAttribIPointer","is_normalised","stride","vertexAttribPointer","bindVertexArray","VertexBufferLayout","sizeof","VertexBufferAttribute","FLOAT","IndexBuffer","buffer","ELEMENT_ARRAY_BUFFER","STATIC_DRAW","UniformMat4f","uniformMatrix4fv","UniformVec3f","uniform3f","Uniform","callback","cube","vertex_data","left","right","front","back","top","bottom","Float32Array","index_data","Uint32Array","cube_optimized","BoundingBox","thickness","_this$generate","generate","_this$generate2","triangle_count","push_data","_data","shifted_index","idx","_i","_arr","_i2","_arr2","_i3","_arr3","create_cube","_i4","_arr4","_i5","_arr5","_i6","_arr6","_i7","_arr7","_i8","_arr8","_i9","_arr9","centre","AdjustableValue","help","_value","get","set","Toggle","_AdjustableValue","_inherits","_super","_createSuper","_get","_getPrototypeOf","_set","Color","_AdjustableValue2","_super2","color","Slider","_AdjustableValue3","_super3","clamp","Dropdown","_AdjustableValue4","_super4","options","_this2","Border","camera","colour","shader","border_shader","bind_uniforms","adjusted_size","offset_vec","border","index_buffer","push_attribute","add_vertex_buffer","add_uniform","c","uniform4f","drawElements","TRIANGLES","Renderer","props","params","_this$props$size$valu","uniform1i","create_frag_shader","colouring","volume_shader","vert_src","frag_src","xyz","layer","radius","neighbour_and_alive","VolumeRenderer","_Renderer","_create_volume_data","create_volume_data","_create_volume_data2","ibo","add_params","occlusion","step_factor","create_shader","current_option","add_uniforms","uniform1f","enable","CULL_FACE","abs","_this$props$size$valu2","X","Y","Z","_this$props$camera$vi","_this$props$camera$vi2","cullFace","FRONT","BACK","basic","point_cloud","basic_alternate","no_shading","inline_imports","create_inline_header","create_inline_footer","PointCloudRenderer","point_type","brightness","scaling_enabled","quad","create_quad_data","tri","create_triangle_data","current_data","drawElementsInstanced","VoxelRenderer","shading_params","ambient_strength","diffuse_strength","specular_strength","specular_power_factor","fog_near","fog_far","sun_strength","sky_strength","light_colour","global_params","shading","shading_keys","update_props","light_position","_create_cube_data","create_cube_data","_create_cube_data2","load_params","ShaderManager","renderers","volume","point","voxel","renderer_type","current_renderer","update_params","SerializedRandomiser","SeedCrystalSerialized","_SerializedRandomiser","density","SeedCrystalAbsoluteSerialized","_SerializedRandomiser2","RuleSerialized","remain","become","NeighbourSerialized","NeighbourRules","RuleReader","string","substrings","replace","_substrings","remain_alive","become_alive","convert_to_number","retrieve_rule","number_range","N","Array","fill","numbers","number","assert_number","_range","word","Number","Entry","ca_string","description","DefaultEntryBrowser","entries","add_entry","select","current_index","selected_entry","StoredEntryBrowser","db_cfg","store","db_request","window","indexedDB","open","onerror","onsuccess","db","on_db_load","onupgradeneeded","createObjectStore","keyPath","autoIncrement","createIndex","unique","cfg","transaction","objectStore","corrupted_ids","openCursor","cursor","_cursor$value","StoredEntry","ex","continue","purge_corrupted_ids","ids","warn","_step2","_iterator2","_this3","original","put","oncomplete","_this4","request","_this5","_Entry","_this6","EntryBrowser","browsers","current_browser_key","listen_select","selected_browser","String","stored","edit","Statistics","completed_blocks","frame_time","total_blocks","total_steps","texture_data_update","texture_data_upload","draw_time","cooldown","setTimeout","recieve_key","recieve_batch","force_update","RandomiserManager","add_randomiser","other","current_randomiser","Observable","App","DEPTH_TEST","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","show_border","show_render","background_colour","randomiser_manager","entry_browser","sim_renderer","set_randomiser","to_json","update_randomiser","set_rule","randomise","xi","yi","zi","xf","yf","zf","requestAnimationFrame","loop","on_update","canvas","clientWidth","height","clientHeight","viewport","resize","clearColor","clear","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","MouseController","onMouseDown","on_mouse_down","onMouseUp","on_mouse_up","onMouseMove","on_mouse_move","onWheel","on_wheel","rotating","zooming","mouse_start_pos","vec2","clientX","clientY","curr_pos","delta_zoom","deltaY","zoom","TouchScreenController","onTouchStart","on_touch_start","onTouchMove","on_touch_move","onTouchEnd","on_touch_end","total_touches","touch_start_pos","touch_zoom_distance","touch_list","_this$touch_list","touches","touch","zoom_touches","calculate_touch_distance","on_touch_rotate","on_touch_zoom","touch_a","touch_b","dist_a","dist_b","first","second","pos_start","pos_end","Canvas","_React$Component","mouse_controller","touch_controller","current","getContext","create_app","focus_timeout","create_focus_timeout","clearTimeout","delay","change_focus","getState","gui","set_focused","reducer","init_stats","init_app","combineReducers","step","toggle","browser","_action$value","manager","select_renderer","update_current","create_reducer","replaceReducer","run","_hooks","assign","ref","Component","FullScreenButton","font","is_fullscreen","document","documentElement","d","request_fullscreen","requestFullscreen","mozRequestFullScreen","webkitRequestFullScreen","msRequestFullscreen","cancel_fullscreen","exitFullscreen","mozCancelFullScreen","webkitCancelFullScreen","msExitFullscreen","fullscreenElement","mozFullscreen","webkitIsFullScreen","action_fullscreen","SimulationView","useStore","float_controls","_ref","_ref2","rgb","style","zIndex","position","alignSelf","href","rel","data-toggle","data-placement","title","EntryEditor","_useState","useState","_useState2","set_name","_useState3","_useState4","set_ca_string","_useState5","_useState6","show_actions","set_show_actions","onSubmit","onExit","errors","on_submit","preventDefault","err_fmt","form","onKeyDown","keyCode","onChange","data-html","str","lines","line","render_errors","actions","onMouseOver","onMouseEnter","onMouseLeave","EntryView","copy_success","set_copy_success","selected","_props$actions","del","copy","onEdit","on_delete","delete_entry","on_copy","navigator","permissions","query","res","clipboard","writeText","on_edit","render_copy_button","role","select_entry","editing","set_editing","set_errors","_useState7","_useState8","on_error","edit_entry","on_exit","AddButton","create_entry","textAlign","selected_browser_key","selected_index","browser_key","set_browser_key","get_entries","is_user","browser_keys","render_controls","Help","text","ColorPicker","valueChanged","show_picker","set_show_picker","rgba","a","background","ChromePicker","disableAlpha","RenderAdjustableValue","adjustable","slider","toFixed","SliderView","checked","ToggleView","dropdown","option","DropdownView","valueChange","ColorView","GraphicsControls","border_checkbox","render_checkbox","border_colour","ShaderMenu","card_body","ShaderSettings","aria-expanded","aria-controls","update_shader_params","SizeChanger","app_size","set_x","set_y","set_z","clamped","size_changer_form","progress","RandomiserMenu","randomiser_options","select_randomiser","SeedCrystalEditor","param_options","change_param","createStore","compose","applyMiddleware","thunk","createRef","Provider","Main","Boolean","hostname","match","ReactDOM","render","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.418a9dd4.chunk.js","sourcesContent":["module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"360c322880eafe2b008f.worker.js\");\n};","export function gui_reducer(init) {\r\n    let default_settings = {\r\n        fullscreen: false, \r\n        focused: true,\r\n        ...init\r\n    };\r\n    const reducer = (settings=default_settings, action) => {\r\n        switch (action.type) {\r\n            case 'gui.fullscreen':\r\n                return {...settings, fullscreen: action.value};\r\n            case 'gui.focused':\r\n                return {...settings, focused: action.value};\r\n            default:\r\n                break;\r\n        }\r\n        return settings;\r\n    }\r\n    return reducer;\r\n}","// app controls\r\nexport const show_render = is_render => ({\r\n    type: 'app.show_render', value: is_render\r\n})\r\n\r\nexport const show_border = has_border => ({\r\n    type: 'app.show_border', value: has_border\r\n})\r\n\r\nexport const set_background_colour = colour => ({\r\n    type: 'app.set_background_colour', value: colour\r\n})\r\n\r\nexport const set_border_colour = colour => ({\r\n    type: 'app.set_border_colour', value: colour\r\n})\r\n\r\nexport const set_size = size => ({\r\n    type: 'app.set_size', value: size\r\n})\r\n\r\n// sim controls\r\nexport const sim = {\r\n    step:       () => ({type: 'step'}),\r\n    randomise:  () => ({type: 'randomise'}),\r\n    clear:      () => ({type: 'clear'}),\r\n    toggle:     () => ({type: 'toggle'}),\r\n    start:      () => ({type: 'start'}),\r\n    stop:       () => ({type: 'stop'}),\r\n}\r\n\r\n// entries\r\nexport const refresh_entries = () => ({\r\n    type: 'entry.refresh'\r\n})\r\n\r\nexport const select_entry = (browser, index) => ({\r\n    type: 'entry.select', value: {key: browser, index}\r\n})\r\n\r\nexport const create_entry = (name, ca_string, on_error) => (dispatch, getState) => {\r\n    let entry_browser = getState().entry_browser;\r\n    entry_browser.create(name, ca_string)\r\n        .then(() => {\r\n            on_error(false);\r\n            dispatch(refresh_entries());\r\n        }, (err) => {\r\n            on_error(err);\r\n        }); \r\n}\r\n\r\nexport const edit_entry = (browser, index, name, ca_string, on_error) => (dispatch, getState) => {\r\n    let entry_browser = getState().entry_browser;\r\n    entry_browser.edit(browser, index, name, ca_string)\r\n        .then(() => {\r\n            on_error(false);\r\n            dispatch(refresh_entries());\r\n        }, (err) => {\r\n            on_error(err);\r\n        });\r\n}\r\n\r\nexport const delete_entry = (browser, index) => (dispatch, getState) => {\r\n    let entry_browser = getState().entry_browser;\r\n    entry_browser.delete(browser, index)\r\n        .then(() => {\r\n            dispatch(refresh_entries());\r\n        })\r\n}\r\n\r\n// randomiser\r\nexport const select_randomiser = index => ({\r\n    type: 'randomiser.select', value: index\r\n})\r\n\r\nexport const update_randomiser = (name, value) => ({\r\n    type: 'randomiser.update', name: name, value: value \r\n})\r\n\r\n// shader\r\nexport const select_renderer = index => ({\r\n    type: 'shader.select_renderer', value: index\r\n})\r\n\r\nexport const update_shader_params = params => ({\r\n    type: 'shader.update_params', value: params\r\n})\r\n\r\n// statistics\r\nexport const update_statistics = stats => ({\r\n    type: 'stats.update', value: stats\r\n})\r\n\r\n// gui\r\nexport const set_fullscreen = fullscreen => ({\r\n    type: 'gui.fullscreen', value: fullscreen\r\n})\r\n\r\nexport const set_focused = focused => ({\r\n    type: 'gui.focused', value: focused\r\n})\r\n","import React from 'react';\r\n\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { sim } from '../actions';\r\n\r\nexport function Controls () {\r\n  const is_running = useSelector(state => state.app.sim.is_running);\r\n  const dispatch = useDispatch();\r\n\r\n  const on_off = is_running ? 'Pause': 'Run';\r\n  const run_btn = is_running ? 'danger' : 'success';\r\n\r\n  return (\r\n    <div className=\"btn-group\">\r\n      <button className=\"btn btn-secondary\" onClick={() => dispatch(sim.step())}>Step</button>\r\n      <button className=\"btn btn-primary\" onClick={() => dispatch(sim.randomise())}>Randomise</button>\r\n      <button className=\"btn btn-warning\" onClick={() => dispatch(sim.clear())}>Clear</button>\r\n      <button className={\"btn btn-\"+run_btn} onClick={() => dispatch(sim.toggle())}>{on_off}</button>\r\n    </div>\r\n  );\r\n}","import { mat4, vec3 } from 'gl-matrix';\r\n\r\nexport class Camera {\r\n  constructor(size) {\r\n    this.size = size;\r\n\r\n    this.fov = 50;\r\n    this.aspect_ratio = 1;\r\n    this.view_position = vec3.fromValues(0, 0, 0);\r\n    this.look_position = vec3.create();\r\n    this.target = vec3.fromValues(0, 0, 0);\r\n    this.model_translation = vec3.create();\r\n\r\n    this.model = mat4.create();\r\n    this.view = mat4.create();\r\n    this.projection = mat4.create();\r\n\r\n    this.on_size_change(this.size.value);\r\n    this.size.listen(size => this.on_size_change(size.value));\r\n\r\n    this.update();\r\n  }\r\n\r\n  on_size_change(size) {\r\n    this.model_translation = vec3.create();\r\n    vec3.scale(this.model_translation, size, -0.5);\r\n\r\n    // zoom along minimum axis\r\n    // zoom by maximum axis\r\n    let distance = Math.max(...size);\r\n    let min_index = argmin([...size]); \r\n\r\n    this.view_position = vec3.create();\r\n    this.view_position[min_index] = distance*1.5;\r\n    // glitchy around y axis due to euler angle rotation, so add offset\r\n    if (min_index === 1) {\r\n      this.view_position[2] = 1;\r\n    }\r\n  }\r\n\r\n  update() {\r\n\r\n    mat4.identity(this.model);\r\n    mat4.translate(this.model, this.model, this.model_translation);\r\n    mat4.scale(this.model, this.model, [1, 1, 1]); \r\n\r\n    mat4.lookAt(this.view, this.view_position, this.target, [0, 1, 0]);\r\n\r\n    // mat4.perspectiveFromFieldOfView(this.projection, fov, 0.01, 1000);\r\n    mat4.perspective(this.projection, this.fov * Math.PI / 180, this.aspect_ratio, 0.01, 10000);\r\n  }\r\n\r\n  rotate(dx, dy) {\r\n    // vec3.rotateX(this.pos, this.pos, this.look_position, -dy);\r\n    // vec3.rotateY(this.pos, this.pos, this.look_position, dx);\r\n\r\n    let rotation = mat4.create();\r\n    mat4.rotateY(rotation, rotation, dx);\r\n\r\n    let xz_plane_direction = vec3.create();\r\n    vec3.sub(xz_plane_direction, this.look_position, this.view_position);\r\n    xz_plane_direction[1] = this.look_position[1];\r\n    vec3.rotateY(xz_plane_direction, xz_plane_direction, this.look_position, Math.PI/2.0);\r\n\r\n    mat4.rotate(rotation, rotation, -dy, xz_plane_direction);\r\n\r\n    // mat4.rotateX(rotation, rotation, -dy);\r\n    vec3.transformMat4(this.view_position, this.view_position, rotation);\r\n  }\r\n\r\n  zoom(delta) {\r\n    let diff = vec3.create();\r\n    vec3.sub(diff, this.view_position, this.look_position);\r\n    vec3.scale(diff, diff, 1.0+delta);\r\n\r\n    vec3.add(this.view_position, this.look_position, diff);\r\n  }\r\n}\r\n\r\n\r\nfunction argmin(list) {\r\n  let min_i = 0;\r\n  let min_val = list[0];\r\n  for (let i = 1; i < list.length; i++) {\r\n    let val = list[i];\r\n    if (val < min_val) {\r\n      min_val = val;\r\n      min_i = i;\r\n    }\r\n  } \r\n  return min_i;\r\n}\r\n\r\n","import worker from 'worker-loader!./worker.js'; // eslint-disable-line import/no-webpack-loader-syntax \r\n\r\n/**\r\n * Frontend to communicate with the web worker\r\n */\r\nexport class CellularAutomaton3D {\r\n    constructor(size, stats) {\r\n        this.size = size;\r\n        this.stats = stats;\r\n\r\n        this.worker = worker();\r\n        this.promise_id = 0;\r\n        this.is_running = false;\r\n\r\n        this.set_size(this.size.value);\r\n        this.size.listen(size => {\r\n            this.set_size(size.value);\r\n        })\r\n\r\n        this.worker.addEventListener('message', (event) => {\r\n            let msg = event.data;\r\n\r\n            if (msg.error) {\r\n                // throw msg.error;\r\n                console.error(msg);\r\n                return;\r\n            }\r\n\r\n            switch (msg.action) {\r\n                case 'stats':\r\n                    this.stats.recieve(msg.data);\r\n                    break;\r\n                case 'grid':\r\n                    this.notify(msg.grid, msg.local);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        });\r\n\r\n        this.worker.addEventListener('error', ev => {\r\n            console.error(ev.message, ev);\r\n        })\r\n\r\n        this.listeners = new Set();\r\n    }\r\n\r\n    notify(grid, local) {\r\n        for (let listener of this.listeners) {\r\n            listener(grid, local);\r\n        }\r\n        this.set_grid(grid);\r\n    }\r\n\r\n    listen_available_frame(listener) {\r\n        return this.listeners.add(listener);\r\n    }\r\n\r\n    unlisten_available_frame(listener) {\r\n        return this.listeners.delete(listener);\r\n    }\r\n\r\n    set_size(size) {\r\n        this.use_worker('set_size', size);\r\n    }\r\n\r\n    set_rule(rule) {\r\n        this.use_worker('set_rule', rule);\r\n    }\r\n\r\n    set_randomiser(randomiser) {\r\n        this.use_worker('set_randomiser', randomiser);\r\n    }\r\n\r\n    clear() {\r\n        this.use_worker('clear');\r\n    }\r\n\r\n    randomise() {\r\n        this.use_worker('randomise');\r\n    }\r\n\r\n    step() {\r\n        this.use_worker('step');\r\n    }\r\n\r\n    start() {\r\n        this.use_worker('start');\r\n        this.is_running = true;\r\n    }\r\n\r\n    stop() {\r\n        this.use_worker('stop');\r\n        this.is_running = false;\r\n    }\r\n\r\n    toggle() {\r\n        this.is_running ? this.stop() : this.start();\r\n    }\r\n\r\n    set_grid(grid) {\r\n        this.use_worker('set_grid', grid, grid.transferables);\r\n    }\r\n\r\n    request_frame() {\r\n        this.use_worker('request_frame');\r\n    }\r\n\r\n    use_worker(action, data={}, transferables=[]) {\r\n\r\n        let id = this.promise_id;\r\n        this.promise_id += 1;\r\n\r\n        this.worker.postMessage({action, id, data}, transferables);\r\n    }\r\n};","export class Texture3D {\r\n    constructor(gl, data, shape) {\r\n        this.gl = gl;\r\n        this.data = data;\r\n        this.shape = shape;\r\n        this.texture = gl.createTexture();\r\n\r\n        gl.bindTexture(gl.TEXTURE_3D, this.texture);\r\n        // The R32F type works only with gl.RED and gl.FLOAT\r\n        // https://www.khronos.org/registry/webgl/specs/latest/2.0/#TEXTURE_TYPES_FORMATS_FROM_DOM_ELEMENTS_TABLE\r\n        gl.texParameteri(gl.TEXTURE_3D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n        gl.texParameteri(gl.TEXTURE_3D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n\r\n        gl.texParameteri(gl.TEXTURE_3D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n        gl.texParameteri(gl.TEXTURE_3D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n        gl.texParameteri(gl.TEXTURE_3D, gl.TEXTURE_WRAP_R, gl.CLAMP_TO_EDGE);\r\n        gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\r\n\r\n        // gl.texImage3D(gl.TEXTURE_3D, 0, gl.R8, shape[0], shape[1], shape[2], 0, gl.RED, gl.UNSIGNED_BYTE, this.data);\r\n        // gl.texImage3D(gl.TEXTURE_3D, 0, gl.RG8, shape[0], shape[1], shape[2], 0, gl.RG, gl.UNSIGNED_BYTE, this.data);\r\n        gl.texImage3D(gl.TEXTURE_3D, 0, gl.RG8, shape[0], shape[1], shape[2], 0, gl.RG, gl.UNSIGNED_BYTE, this.data);\r\n        // gl.texImage3D(gl.TEXTURE_3D, 0, gl.RGBA8, shape[0], shape[1], shape[2], 0, gl.RGBA, gl.UNSIGNED_BYTE, this.data);\r\n    }\r\n\r\n    bind(slot=0) {\r\n        let gl = this.gl;\r\n        gl.activeTexture(gl.TEXTURE0 + slot);\r\n        gl.bindTexture(gl.TEXTURE_3D, this.texture);\r\n    }\r\n}","export class Texture2D {\r\n    constructor(gl, data, shape) {\r\n        this.gl = gl;\r\n        this.data = data;\r\n        this.shape = shape;\r\n        this.texture = gl.createTexture();\r\n\r\n        gl.bindTexture(gl.TEXTURE_2D, this.texture);\r\n        // The R32F type works only with gl.RED and gl.FLOAT\r\n        // https://www.khronos.org/registry/webgl/specs/latest/2.0/#TEXTURE_TYPES_FORMATS_FROM_DOM_ELEMENTS_TABLE\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n        gl.pixelStorei(gl.UNPACK_ALIGNMENT, 1);\r\n        // gl.texImage2D(gl.TEXTURE_2D, 0, gl.R8, shape[0], shape[1], 0, gl.RED, gl.UNSIGNED_BYTE, this.data);\r\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA8, shape[0], shape[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, this.data);\r\n    }\r\n\r\n    bind(slot=0) {\r\n        let gl = this.gl;\r\n        gl.activeTexture(gl.TEXTURE0 + slot);\r\n        gl.bindTexture(gl.TEXTURE_2D, this.texture);\r\n    }\r\n}","import { Texture3D } from '../../gl/Texture3D';\r\nimport { create_states_texture, create_radius_texture } from './ColourMaps';\r\n\r\n/**\r\n * Collect data from simulation and render it\r\n */\r\nexport class SimulationRenderer {\r\n  constructor(gl, size, sim, shader_manager, stats) {\r\n    this.gl = gl;\r\n\r\n    this.size = size;\r\n    this.set_size(this.size.value);\r\n    this.size.listen(size => this.set_size(size.value));\r\n\r\n    this.sim = sim;\r\n    this.shader_manager = shader_manager;\r\n    this.stats = stats;\r\n    this.max_neighbours = 26;\r\n\r\n    this.data_updated = false;\r\n\r\n    this.sim.listen_available_frame((grid, unprocessed_blocks, local) => {\r\n      this.update_texture_buffer(grid, unprocessed_blocks, local);\r\n    });\r\n  }\r\n\r\n  set_size(size) {\r\n    let [x, y, z] = size;\r\n    this.total_cells = x*y*z; \r\n    this.create_textures(size);\r\n  }\r\n\r\n  create_textures(size) {\r\n    let gl = this.gl;\r\n\r\n    // colour maps for states and distances\r\n    this.state_colour_texture = create_states_texture(gl);\r\n    this.radius_colour_texture = create_radius_texture(gl);\r\n\r\n    // create 3d texture for rendering cell data\r\n    this.cell_data_width = 2;\r\n    this.cell_data = new Uint8Array(this.total_cells*this.cell_data_width);\r\n    this.cell_data_texture = new Texture3D(gl, this.cell_data, size);\r\n  }\r\n\r\n  \r\n\r\n  // from the transferred grid from webworker, update the texture's buffer\r\n  // we use a rgba buffer, with 8 bits for each channel\r\n  // r = state, g = neighbours, b/a = unused\r\n  update_texture_buffer(grid, local=false) {\r\n    let items = local ? grid.render_updates : range(0, grid.count);\r\n    // once updates all rendered, clear it\r\n    if (local) grid.render_updates = new Set();\r\n\r\n    let cells = grid.cells;\r\n    let neighbours = grid.neighbours;\r\n\r\n    let total_items = 0;\r\n\r\n    let start = performance.now();\r\n    const width = this.cell_data_width;\r\n    let cell_data = this.cell_data;\r\n    for (let i of items) {\r\n      let offset = i*width;\r\n      let state = cells[i];\r\n      let neighbour = neighbours[i];\r\n      cell_data[offset+0] = state;\r\n      cell_data[offset+1] = Math.floor(Math.min(neighbour, this.max_neighbours)/this.max_neighbours * 255);\r\n      total_items += 1;\r\n    }\r\n    let end = performance.now();\r\n    this.stats.recieve('texture_data_update', end-start);\r\n\r\n    // data mutated if more than one item\r\n    this.data_updated = this.data_updated || (total_items > 0);\r\n  }\r\n\r\n  // open gl requires us to load data to gpu when texture changed\r\n  load_texture_data() {\r\n    let gl = this.gl;\r\n    if (!this.data_updated) {\r\n      return;\r\n    }\r\n    let start = performance.now();\r\n    let [x, y, z] = this.size.value;\r\n    gl.texSubImage3D(gl.TEXTURE_3D, 0, 0, 0, 0, x, y, z, gl.RG, gl.UNSIGNED_BYTE, this.cell_data, 0);\r\n    let end = performance.now();\r\n    this.stats.recieve('texture_data_upload', end-start);\r\n    this.data_updated = false;\r\n  }\r\n\r\n  // render the 3d grid\r\n  on_render() {\r\n    this.shader_manager.bind();\r\n    this.cell_data_texture.bind(0);\r\n    this.sim.request_frame();\r\n    this.load_texture_data();\r\n    this.state_colour_texture.bind(1);\r\n    this.radius_colour_texture.bind(2);\r\n    {\r\n      let start = performance.now();\r\n      this.shader_manager.on_render();\r\n      let end = performance.now();\r\n      this.stats.recieve('draw_time', end-start);\r\n    }\r\n  }\r\n}\r\n\r\nfunction *range(start, end) {\r\n  for (let i = start; i < end; i++) {\r\n    yield i;\r\n  }\r\n}\r\n\r\n","import { Texture2D } from '../../gl/Texture2D';\r\nimport colorsys from 'colorsys';\r\n\r\nexport function create_states_texture(gl) {\r\n  let total_states = 40;\r\n  let state_colours_data = new Uint8Array(4*total_states)\r\n  for (let i = 0; i < total_states-1; i++) {\r\n    let offset = (i+1)*4;\r\n    \r\n    const hue_range = 200;\r\n    let hue = hue_range*(1.0-i/total_states);\r\n    let saturation = 100;\r\n    let value = 100;\r\n    let {r, g, b} = colorsys.hsv_to_rgb(hue, saturation, value);\r\n    state_colours_data[offset+0] = r;\r\n    state_colours_data[offset+1] = g;\r\n    state_colours_data[offset+2] = b;\r\n    state_colours_data[offset+3] = 255;\r\n  }\r\n\r\n  for (let i = 0; i < 4; i++) {\r\n    state_colours_data[i] = 0;\r\n  }\r\n\r\n  return new Texture2D(gl, state_colours_data, [total_states,1]);\r\n}\r\n\r\nexport function create_radius_texture(gl) {\r\n  let total_states = 360;\r\n  let state_colours_data = new Uint8Array(4*total_states)\r\n  for (let i = 0; i < total_states; i++) {\r\n    let offset = (i)*4;\r\n    \r\n    const hue_range = 360;\r\n    let hue = hue_range*(1.0-i/total_states);\r\n    let saturation = 100;\r\n    let value = 100;\r\n    let {r, g, b} = colorsys.hsv_to_rgb(hue, saturation, value);\r\n    state_colours_data[offset+0] = r;\r\n    state_colours_data[offset+1] = g;\r\n    state_colours_data[offset+2] = b;\r\n    state_colours_data[offset+3] = 255;\r\n  }\r\n  \r\n  return new Texture2D(gl, state_colours_data, [total_states,1]);\r\n}","export class Shader {\r\n  constructor(gl, vertex_shader_src, fragment_shader_src) {\r\n    this.gl = gl;\r\n    this.create_shader_program(vertex_shader_src, fragment_shader_src);\r\n    this.uniforms = []; \r\n    this.locations = [];\r\n  }\r\n\r\n  create_shader_program(vertex_shader_src, fragment_shader_src) {\r\n    [this.vertex_shader, this.fragment_shader, this.program] = create_program(this.gl, vertex_shader_src, fragment_shader_src); \r\n  }\r\n\r\n  // add to list of uniforms permanently binded to shader\r\n  add_uniform(name, uniform) {\r\n    let gl = this.gl;\r\n    let location = gl.getUniformLocation(this.program, name);\r\n    if (location === null) {\r\n      // console.warn(`Couldn't find location of uniform ${name}`);\r\n      // throw new Error(`Couldn't find location of uniform ${name}`);\r\n    } \r\n    this.uniforms.push(uniform);\r\n    this.locations.push(location);\r\n  }\r\n\r\n  // dynamic sub in uniform\r\n  // apply_uniform(name, uniform) {\r\n  //   let gl = this.gl;\r\n  //   this.bind();\r\n  //   let location = gl.getUniformLocation(this.program, name);\r\n  //   uniform.apply(location);\r\n  // }\r\n\r\n  bind() {\r\n    let gl = this.gl;\r\n    gl.useProgram(this.program);\r\n    for (let i = 0; i < this.uniforms.length; i++) {\r\n      let uniform = this.uniforms[i];\r\n      let location = this.locations[i];\r\n      if (location === null) {\r\n        continue;\r\n      }\r\n      uniform.apply(location);\r\n    }\r\n  }\r\n}\r\n\r\nfunction create_program(gl, vertex_shader_src, fragment_shader_src) {\r\n  const vertex_shader = gl.createShader(gl.VERTEX_SHADER);\r\n  gl.shaderSource(vertex_shader, vertex_shader_src);\r\n  gl.compileShader(vertex_shader);\r\n  if (!gl.getShaderParameter(vertex_shader, gl.COMPILE_STATUS)) {\r\n    console.error(gl.getShaderInfoLog(vertex_shader));\r\n    console.error(prepend_line_numbers(vertex_shader_src));\r\n    throw new Error('Unable to compile vertex shader');\r\n  }\r\n\r\n  const fragment_shader = gl.createShader(gl.FRAGMENT_SHADER);\r\n  gl.shaderSource(fragment_shader, fragment_shader_src);\r\n  gl.compileShader(fragment_shader);\r\n  if (!gl.getShaderParameter(fragment_shader, gl.COMPILE_STATUS)) {\r\n    console.error(gl.getShaderInfoLog(fragment_shader));\r\n    console.error(prepend_line_numbers(fragment_shader_src));\r\n    throw new Error('Unable to compile fragment shader');\r\n  }\r\n\r\n  const program = gl.createProgram();\r\n  gl.attachShader(program, vertex_shader);\r\n  gl.attachShader(program, fragment_shader);\r\n  gl.linkProgram(program);\r\n  if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\r\n    console.error(gl.getProgramInfoLog(program));\r\n    throw new Error('Unable to construct shader program');\r\n  }\r\n\r\n  return [vertex_shader, fragment_shader, program];\r\n}\r\n\r\nfunction prepend_line_numbers(src) {\r\n  let lines = src.split('\\n').map((v, i) => `${i+1}\\t| ${v}`);\r\n  let out = lines.join('\\n');\r\n  return out;\r\n}","// 1D array containing n elements\r\n// can contain arbitary data\r\nexport class VertexBufferObject {\r\n  constructor(gl, data, usage) {\r\n    this.gl = gl;\r\n\r\n    this.data = data;\r\n\r\n    this.vbo = gl.createBuffer();\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.vbo);\r\n    gl.bufferData(gl.ARRAY_BUFFER, data, usage);\r\n  }\r\n\r\n  bind() {\r\n    let gl = this.gl;\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.vbo);\r\n  }\r\n}\r\n\r\nexport class VertexArrayObject {\r\n  constructor(gl) {\r\n    this.gl = gl;\r\n    this.vao = gl.createVertexArray();\r\n    this.integer_types = new Set([gl.INT, gl.UNSIGNED_INT]);\r\n  }\r\n\r\n  add_vertex_buffer(vbo, layout) {\r\n    let gl = this.gl;\r\n\r\n    this.bind();\r\n    vbo.bind();\r\n\r\n    let offset = 0;\r\n    for (let attribute of layout.attributes) {\r\n      gl.enableVertexAttribArray(attribute.index);\r\n      if (this.integer_types.has(attribute.type)) {\r\n        gl.vertexAttribIPointer(attribute.index, attribute.count, attribute.type, attribute.is_normalised, layout.stride, offset);\r\n      } else {\r\n        gl.vertexAttribPointer(attribute.index, attribute.count, attribute.type, attribute.is_normalised, layout.stride, offset);\r\n      }\r\n      offset += attribute.count * attribute.size;\r\n    }\r\n  }\r\n\r\n  bind() {\r\n    let gl = this.gl;\r\n    gl.bindVertexArray(this.vao);\r\n  }\r\n}\r\n\r\nexport class VertexBufferLayout {\r\n  constructor(gl) {\r\n    this.gl = gl;\r\n    this.stride = 0;\r\n    this.attributes = [];\r\n  }\r\n\r\n  push_attribute(index, count, type, is_normalised) {\r\n    let size = this.sizeof(type);\r\n    let attribute = new VertexBufferAttribute(index, count, type, is_normalised, size);\r\n    this.attributes.push(attribute);\r\n    this.stride += count * size;\r\n  }\r\n\r\n  slice(start, end) {\r\n    let layout = new VertexBufferLayout();\r\n    layout.stride = this.stride;\r\n    layout.attributes = this.attributes.slice(start, end);\r\n    return layout;\r\n  }\r\n\r\n  sizeof(type) {\r\n    let gl = this.gl;\r\n\r\n    switch (type) {\r\n    case gl.FLOAT: return 4;\r\n    case gl.UNSIGNED_INT: return 4;\r\n    case gl.INT: return 4;\r\n    default: throw new Error(`Unknown element type: ${type}`);\r\n    }\r\n  }\r\n}\r\n\r\n// each element in the shader has an attribute index\r\n// layout(location = <attribute_index>) in vec3 position;\r\n// layout(locaiton = <attribute_index>) in vec3 normal;\r\nclass VertexBufferAttribute {\r\n  constructor(index, count, type, is_normalised, size) {\r\n    this.index = index;\r\n    this.count = count;\r\n    this.type = type;\r\n    this.is_normalised = is_normalised;\r\n    this.size = size;\r\n  }\r\n\r\n  \r\n}","export class IndexBuffer {\r\n    constructor(gl, data) {\r\n        this.gl = gl;\r\n\r\n        this.buffer = gl.createBuffer();\r\n        this.count = data.length;\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.buffer); \r\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, data, gl.STATIC_DRAW); // gluint is 4 bytes\r\n    }\r\n\r\n    bind() {\r\n        let gl = this.gl;\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, this.buffer);\r\n    }\r\n}","export class UniformMat4f {\r\n    constructor(gl, data) {\r\n        this.gl = gl;\r\n        this.data = data;\r\n    }\r\n\r\n    apply(location) {\r\n       this.gl.uniformMatrix4fv(location, false, this.data);\r\n    }\r\n}\r\n\r\nexport class UniformVec3f {\r\n    constructor(gl, data) {\r\n        this.gl = gl;\r\n        this.data = data;\r\n    }\r\n\r\n    apply(location) {\r\n        this.gl.uniform3f(location, this.data[0], this.data[1], this.data[2]);\r\n    }\r\n}\r\n\r\nexport class UniformVec4f {\r\n    constructor(gl, data) {\r\n        this.gl = gl;\r\n        this.data = data;\r\n    }\r\n\r\n    apply(location) {\r\n        this.gl.uniform4f(location, this.data[0], this.data[1], this.data[2], this.data[3]);\r\n    }\r\n}\r\n\r\nexport class Uniform {\r\n    constructor(callback) {\r\n        this.callback = callback;\r\n    }\r\n\r\n    apply(location) {\r\n        this.callback(location);\r\n    }\r\n}","const vertex = \r\n`\r\nprecision mediump float;\r\n\r\nattribute vec3 position;\r\nattribute vec3 normal;\r\n\r\nuniform mat4 uModel;\r\nuniform mat4 uView;\r\nuniform mat4 uProjection;\r\nuniform vec3 uOffset;\r\n\r\nvoid main() {\r\n    mat4 MVP = uProjection * uView * uModel;\r\n    gl_Position = MVP * vec4(position + uOffset, 1);\r\n}`;\r\n\r\nconst frag = \r\n`\r\nprecision mediump float;\r\n\r\nuniform vec4 uColour;\r\n\r\nvoid main() {\r\n    gl_FragColor = uColour;\r\n}`;\r\n\r\nexport default {vertex: vertex, frag: frag};","function vertex_data(left, right, front, back, top, bottom) {\r\n  return new Float32Array([\r\n    left, bottom, front, 0, 0, 1,\r\n    right, bottom, front, 0, 0, 1,\r\n    left, top, front, 0, 0, 1,\r\n    right, top, front, 0, 0, 1,\r\n\r\n    left, top, front, 0, 1, 0,\r\n    left, top, back, 0, 1, 0,\r\n    right, top, back, 0, 1, 0,\r\n    right, top, front, 0, 1, 0,\r\n\r\n    right, top, front, 1, 0, 0,\r\n    right, bottom, front, 1, 0, 0,\r\n    right, bottom, back, 1, 0, 0,\r\n    right, top, back, 1, 0, 0,\r\n\r\n    left, top, front, -1, 0, 0,\r\n    left, top, back, -1, 0, 0,\r\n    left, bottom, front, -1, 0, 0,\r\n    left, bottom, back, -1, 0, 0,\r\n\r\n    left, bottom, front, 0, -1, 0,\r\n    left, bottom, back, 0, -1, 0,\r\n    right, bottom, back, 0, -1, 0,\r\n    right, bottom, front, 0, -1, 0,\r\n\r\n    left, top, back, 0, 0, -1,\r\n    right, top, back, 0, 0, -1,\r\n    left, bottom, back, 0, 0, -1,\r\n    right, bottom, back, 0, 0, -1,\r\n  ]);\r\n}\r\n\r\n// wind triangles counter clockwise for culling\r\nconst index_data = new Uint32Array([\r\n    0, 3, 2,\r\n    0, 1, 3,\r\n\r\n    4, 6, 5,\r\n    4, 7, 6,\r\n\r\n    8, 9, 11,\r\n    9, 10, 11,\r\n\r\n    13, 14, 12,\r\n    13, 15, 14,\r\n\r\n    16, 18, 19,\r\n    16, 17, 18,\r\n\r\n    20, 21, 22,\r\n    21, 23, 22,\r\n]);\r\n\r\nexport const cube = {\r\n    vertex_data: vertex_data,\r\n    index_data: index_data\r\n};\r\n\r\nfunction vertex_data_performance(left, right, front, back, top, bottom) {\r\n  return new Float32Array([\r\n    left, bottom, front,\r\n    right, bottom, front,\r\n    left, top, front,\r\n    right, top, front,\r\n    left, bottom, back, \r\n    right, bottom, back, \r\n    left, top, back, \r\n    right, top, back, \r\n  ]);\r\n}\r\n\r\n// wind triangles counter clockwise for culling\r\nconst index_data_performance = new Uint32Array([\r\n  0, 1, 2,\r\n  1, 3, 2,\r\n  2, 3, 6, \r\n  3, 7, 6,\r\n  1, 5, 3, \r\n  5, 7, 3,\r\n  0, 2, 6, \r\n  0, 6, 4, \r\n  4, 1, 0, \r\n  1, 4, 5, \r\n  5, 6, 7, \r\n  5, 4, 6,\r\n]);\r\n\r\nexport const cube_optimized = {\r\n    vertex_data: vertex_data_performance,\r\n    index_data: index_data_performance\r\n};","import { cube } from '../../gl/CubeData';\r\nimport { vec3 } from 'gl-matrix';\r\n\r\nexport class BoundingBox {\r\n    constructor(size, thickness) {\r\n        let [vertex_data, index_data] = this.generate(size, thickness);\r\n        this.size = size;\r\n        this.thickness = thickness;\r\n        this.vertex_data = new Float32Array(vertex_data);\r\n        this.index_data = new Uint32Array(index_data);\r\n    }\r\n\r\n    generate(size, thickness) {\r\n        let vertex_data = [];\r\n        let index_data = [];\r\n        let triangle_count = 0;\r\n        function push_data(data) {\r\n            let [v, i] = data;\r\n            vertex_data.push(...v);\r\n            let shifted_index = i.map(idx => idx+triangle_count);\r\n            index_data.push(...shifted_index);\r\n            triangle_count += 24;\r\n        }\r\n\r\n        // create corner pieces\r\n        let shape = vec3.fromValues(thickness, thickness, thickness);\r\n        for (let x of [0, size[0]]) {\r\n            for (let y of [0, size[1]]) {\r\n                for (let z of [0, size[2]]) {\r\n                    push_data(this.create_cube([x, y, z], shape));\r\n                }\r\n            }\r\n        }\r\n        // create x beams\r\n        shape = vec3.fromValues(size[0]-thickness, thickness, thickness);\r\n        for (let y of [0, size[1]]) {\r\n            for (let z of [0, size[2]]) {\r\n                let x = size[0]/2;\r\n                push_data(this.create_cube([x, y, z], shape));\r\n            }\r\n        }\r\n        // create y beams\r\n        shape = vec3.fromValues(thickness, size[1]-thickness, thickness);\r\n        for (let x of [0, size[0]]) {\r\n            for (let z of [0, size[2]]) {\r\n                let y = size[1]/2;\r\n                push_data(this.create_cube([x, y, z], shape));\r\n            }\r\n        }\r\n        // create z beams\r\n        shape = vec3.fromValues(thickness, thickness, size[2]-thickness);\r\n        for (let x of [0, size[0]]) {\r\n            for (let y of [0, size[1]]) {\r\n                let z = size[2]/2;\r\n                push_data(this.create_cube([x, y, z], shape));\r\n            }\r\n        }\r\n\r\n        return [vertex_data, index_data];\r\n    }\r\n\r\n    create_cube(centre, shape) {\r\n        let left = centre[0] - shape[0]/2;\r\n        let right = centre[0] + shape[0]/2;\r\n        let top = centre[1] + shape[1]/2;\r\n        let bottom = centre[1] - shape[1]/2;\r\n        let front = centre[2] - shape[2]/2;\r\n        let back = centre[2] + shape[2]/2;\r\n        let vertex_data = cube.vertex_data(left, right, front, back, top, bottom);\r\n        let index_data = cube.index_data;\r\n        return [vertex_data, index_data];\r\n    }\r\n};","import { vec3 } from \"gl-matrix\";\r\n\r\nclass AdjustableValue {\r\n  constructor(type, value, help) {\r\n    this.type = type;\r\n    this.help = help;\r\n    this._value = value;\r\n    this.listeners = new Set();\r\n  }\r\n\r\n  set value(value) {\r\n    this._value = value;\r\n    this.notify();\r\n  }\r\n\r\n  get value() {\r\n    return this._value;\r\n  }\r\n\r\n  listen(listener) {\r\n    this.listeners.add(listener);\r\n  }\r\n\r\n  unlisten(listener) {\r\n    this.listeners.delete(listener);\r\n  }\r\n\r\n  notify() {\r\n    for (let listener of this.listeners) {\r\n      listener(this);\r\n    }\r\n  }\r\n}\r\n\r\nexport class Toggle extends AdjustableValue {\r\n  constructor(value, help) {\r\n    super('toggle', value, help);\r\n  }\r\n\r\n  // javascript doesnt extend accessors\r\n  set value(val) {\r\n    super.value = val;\r\n  }\r\n\r\n  get value() {\r\n    return super.value;\r\n  }\r\n}\r\n\r\nexport class Color extends AdjustableValue {\r\n  constructor(color, help) {\r\n    super('color', color, help);\r\n  }\r\n\r\n  set value(val) {\r\n    super.value = vec3.fromValues(val[0], val[1], val[2]);\r\n  }\r\n\r\n  get value() {\r\n    return super.value;\r\n  }\r\n}\r\n\r\nexport class Slider extends AdjustableValue {\r\n  constructor(min, max, value, help) {\r\n    super('slider', value, help);\r\n    this.min = min;\r\n    this.max = max;\r\n  }\r\n\r\n  set value(val) {\r\n    val = this.clamp(val);\r\n    super.value = val;\r\n  }\r\n\r\n  get value() {\r\n    return super.value;\r\n  }\r\n\r\n  clamp(val) {\r\n    if (val < this.min) {\r\n      val = this.min;\r\n    }\r\n    if (val > this.max) {\r\n      val = this.max;\r\n    }\r\n    return val;\r\n  }\r\n}\r\n\r\nexport class Dropdown extends AdjustableValue {\r\n  constructor(options, index=0, help=undefined) {\r\n    super('dropdown', index, help);\r\n    this.options = options;\r\n  }\r\n\r\n  set value(index) {\r\n    index = Math.min(index, this.options.length-1);\r\n    super.value = index;\r\n  }\r\n\r\n  get value() {\r\n    return super.value;\r\n  }\r\n\r\n  get current_option() {\r\n    let option = this.options[this.value];\r\n    return option;\r\n  }\r\n}","import { Shader } from '../../gl/Shader';\r\nimport { VertexBufferObject, VertexArrayObject, VertexBufferLayout } from '../../gl/VertexBuffer';\r\nimport { IndexBuffer } from '../../gl/IndexBuffer';\r\nimport { UniformMat4f, UniformVec3f, Uniform } from '../../gl/Uniform';\r\n\r\nimport { vec3 } from 'gl-matrix';\r\n\r\nimport border_shader from './shaders/border';\r\nimport { BoundingBox } from './BoundingBox';\r\nimport { Color } from '../../ui/util/AdjustableValues';\r\n\r\nexport class Border {\r\n  constructor(gl, size, camera) {\r\n    this.gl = gl;\r\n\r\n    this.camera = camera;\r\n    this.colour = new Color([0,0,0], \"Border Colour\");\r\n    this.shader = new Shader(gl, border_shader.vertex, border_shader.frag);\r\n    this.bind_uniforms(); \r\n\r\n    this.size = size;\r\n    this.set_size(this.size.value);\r\n    this.size.listen(size => this.set_size(size.value));\r\n\r\n  }\r\n\r\n  set_size(size) {\r\n    const gl = this.gl;\r\n\r\n    let thickness = 0.2;\r\n    let offset = 0.5;\r\n\r\n    let adjusted_size = vec3.create();\r\n    vec3.add(adjusted_size, size, vec3.fromValues(2*offset, 2*offset, 2*offset));\r\n    this.offset_vec = vec3.fromValues(-offset, -offset, -offset);\r\n\r\n    this.border = new BoundingBox(adjusted_size, thickness);\r\n\r\n    this.vbo = new VertexBufferObject(gl, this.border.vertex_data, gl.STATIC_DRAW);\r\n    this.index_buffer = new IndexBuffer(gl, this.border.index_data);\r\n\r\n    let layout = new VertexBufferLayout(gl);\r\n    layout.push_attribute(0, 3, gl.FLOAT, false);\r\n    layout.push_attribute(1, 3, gl.FLOAT, false);\r\n\r\n    this.vao = new VertexArrayObject(gl);\r\n    this.vao.add_vertex_buffer(this.vbo, layout);\r\n    this.shader.add_uniform(\"uOffset\", new UniformVec3f(gl, this.offset_vec));\r\n  }\r\n\r\n  bind_uniforms() {\r\n    let gl = this.gl;\r\n\r\n    this.shader.add_uniform(\"uModel\", new UniformMat4f(gl, this.camera.model));\r\n    this.shader.add_uniform(\"uView\", new UniformMat4f(gl, this.camera.view));\r\n    this.shader.add_uniform(\"uProjection\", new UniformMat4f(gl, this.camera.projection));\r\n    // this.shader.add_uniform(\"uColour\", new UniformVec4f(gl, vec4.fromValues(0, 0, 0, 1)));\r\n    // this.shader.add_uniform(\"uColour\", new UniformVec4f(gl, vec4.fromValues(0, 0, 0, 1)));\r\n    this.shader.add_uniform(\"uColour\", new Uniform(loc => {\r\n      let c = this.colour.value;\r\n      gl.uniform4f(loc, c[0]/255, c[1]/255, c[2]/255, 1.0);\r\n    }));\r\n  }\r\n\r\n  on_render() {\r\n    let gl = this.gl;\r\n    this.shader.bind();\r\n    this.vao.bind();\r\n    this.index_buffer.bind();\r\n\r\n    gl.drawElements(gl.TRIANGLES, this.index_buffer.count, gl.UNSIGNED_INT, 0);\r\n  }\r\n}","import { vec3 } from \"gl-matrix\";\r\nimport { UniformMat4f, Uniform } from \"../../../gl/Uniform\";\r\n\r\n/**\r\n * Given a 3D point cloud, render it\r\n */\r\nexport class Renderer {\r\n    constructor(gl, props, params) {\r\n        this.gl = gl;\r\n        this.props = {\r\n            size: vec3.create(),\r\n            ...props\r\n        };\r\n        this.params = params;\r\n    }\r\n\r\n    // arbitary values\r\n    update_props(props) {\r\n        this.props = { ...this.props, ...props };\r\n    }\r\n\r\n    add_params(params) {\r\n        this.params = { ...this.params, ...params };\r\n    }\r\n\r\n    // adjustable values\r\n    update_params(params) {\r\n        for (let key in params) {\r\n            let param = this.params[key];\r\n            param.value = params[key];\r\n        }\r\n        this.params = { ...this.params };\r\n    }\r\n\r\n    // base uniforms\r\n    add_uniforms(shader) {\r\n        let gl = this.gl;\r\n        // camera data\r\n        shader.add_uniform(\"uModel\", new UniformMat4f(gl, this.props.camera.model));\r\n        shader.add_uniform(\"uView\", new UniformMat4f(gl, this.props.camera.view));\r\n        shader.add_uniform(\"uProjection\", new UniformMat4f(gl, this.props.camera.projection));\r\n        // shader.add_uniform(\"uViewPosition\", new UniformVec3f(gl, this.props.camera.view_position));\r\n        shader.add_uniform(\"uViewPosition\", new Uniform(loc => gl.uniform3f(loc, ...this.props.camera.view_position)));\r\n        shader.add_uniform(\"uGridSize\", new Uniform(loc => {\r\n            let [x, y, z] = this.props.size.value;\r\n            gl.uniform3f(loc, x, y, z);\r\n        }));\r\n        // default texture slots\r\n        shader.add_uniform(\"uStateTexture\", new Uniform(loc => gl.uniform1i(loc, 0)));\r\n        shader.add_uniform(\"uStateColourTexture\", new Uniform(loc => gl.uniform1i(loc, 1)));\r\n        shader.add_uniform(\"uRadiusColourTexture\", new Uniform(loc => gl.uniform1i(loc, 2)));\r\n    }\r\n\r\n    bind() {\r\n\r\n    }\r\n\r\n    on_render() {\r\n\r\n    }\r\n}","const vert_shader = (\r\n`#version 300 es\r\n\r\nprecision highp sampler3D;\r\nprecision highp sampler2D;\r\nprecision highp float;\r\n\r\nin vec3 position;\r\n\r\nuniform mat4 uModel;\r\nuniform mat4 uView;\r\nuniform mat4 uProjection;\r\n\r\nuniform vec3 uGridSize;\r\nuniform vec3 uViewPosition;\r\n\r\nout vec3 vPosition;\r\nout vec3 vTexturePosition;\r\n\r\nvoid main() {\r\n    mat4 MVP = uProjection * uView * uModel;\r\n    vec3 vertex_pos = position * uGridSize;\r\n    vec4 pos = MVP * vec4(vertex_pos, 1.0);\r\n    // camera centered around (0,0,0)\r\n    // box has size uGridSize\r\n    vec3 camera_box = abs(uViewPosition);\r\n    vec3 volume_box = abs(uGridSize)/2.0;\r\n\r\n    // determine where to start ray trace if camera is inside the volume\r\n    if (camera_box.x < volume_box.x && camera_box.y < volume_box.y && camera_box.z < volume_box.z) {\r\n        vTexturePosition = uViewPosition/(uGridSize/2.0);\r\n        vTexturePosition += vec3(1.0,1.0,1.0);\r\n        vTexturePosition /= 2.0;\r\n    } else {\r\n        vTexturePosition = position;\r\n    }\r\n\r\n    vPosition = (uModel * vec4(vertex_pos, 1.0)).xyz;\r\n    gl_Position = pos;\r\n}\r\n`\r\n);\r\n\r\nconst create_frag_shader = (colouring) => (\r\n`#version 300 es\r\n\r\nprecision highp sampler3D;\r\nprecision highp sampler2D;\r\nprecision highp float;\r\n\r\nin vec3 vPosition;\r\nin vec3 vTexturePosition;\r\n\r\nuniform vec3 uGridSize;\r\nuniform vec3 uViewPosition;\r\n\r\nuniform sampler3D uStateTexture;\r\nuniform sampler2D uStateColourTexture;\r\nuniform sampler2D uRadiusColourTexture;\r\n\r\nuniform float uOcclusion;\r\nuniform float uStepFactor;\r\n\r\nout vec4 vFragColour;\r\n\r\nvoid main() {\r\n    vec3 view_direction = uViewPosition - vPosition;\r\n    vec3 step_size = normalize(view_direction);\r\n    // vec3 resize = abs(step_size);\r\n    // step_size /= max(resize.x, max(resize.y, resize.z));\r\n    step_size = step_size / uGridSize * uStepFactor;\r\n\r\n    vec3 tex_coords = vTexturePosition;\r\n    while (true) {\r\n        vec4 cell = texture(uStateTexture, tex_coords);\r\n        float state = cell[0];\r\n        float neighbours = cell[1];\r\n        float lighting = 1.0-neighbours*uOcclusion;\r\n        vec4 state_colour = texture(uStateColourTexture, vec2(state, 0.0));\r\n        vec4 neighbour_colour = texture(uStateColourTexture, vec2(neighbours, 0.0));\r\n        ${colouring}\r\n        tex_coords -= step_size;\r\n        if (tex_coords.x < 0.0 || tex_coords.x > 1.0 || \r\n            tex_coords.y < 0.0 || tex_coords.y > 1.0 ||\r\n            tex_coords.z < 0.0 || tex_coords.z > 1.0) \r\n        {\r\n            break;\r\n        }\r\n    }\r\n    vFragColour = vec4(0, 0, 0, 0);\r\n}\r\n`\r\n);\r\n\r\nconst state_colouring = create_frag_shader(\r\n`if (state_colour.a != 0.0) {\r\n    vFragColour = vec4(state_colour.xyz*lighting, state_colour.a);\r\n    return;\r\n}\r\n`\r\n);\r\n\r\nconst xyz_colouring = create_frag_shader(\r\n`if (state_colour.a != 0.0) {\r\n    vFragColour = vec4(tex_coords*lighting, state_colour.a);\r\n    return;\r\n}\r\n`\r\n);\r\n\r\nconst layer_colouring = create_frag_shader(\r\n`if (state_colour.a != 0.0) {\r\n    vec3 distance = tex_coords - vec3(0.5, 0.5, 0.5);\r\n    float radius = length(distance * uGridSize);\r\n    float dist = mod(radius/10.0, 1.0); \r\n    vec4 dist_colour = texture(uRadiusColourTexture, vec2(dist, 0.0));\r\n    vFragColour = vec4(dist_colour.xyz*lighting, state_colour.a);\r\n    return;\r\n}\r\n`\r\n);\r\n\r\nconst radius_colouring = create_frag_shader(\r\n`if (state_colour.a != 0.0) {\r\n    vec3 distance = tex_coords - vec3(0.5, 0.5, 0.5);\r\n    float radius = length(distance * uGridSize);\r\n    float dist = length(distance) * 2.0;\r\n    vec4 dist_colour = texture(uRadiusColourTexture, vec2(dist, 0.0));\r\n    vFragColour = vec4(dist_colour.xyz*lighting, state_colour.a);\r\n    return;\r\n}\r\n`\r\n);\r\n\r\nconst neighbour_colouring = create_frag_shader(\r\n`if (neighbour_colour.a != 0.0) {\r\n    vFragColour = vec4(neighbour_colour.xyz*lighting, neighbour_colour.a);\r\n    return;\r\n}\r\n`\r\n);\r\n\r\nconst neighbour_and_alive_colouring = create_frag_shader(\r\n`float alpha = state_colour.a * neighbour_colour.a;\r\nif (alpha != 0.0) {\r\n    vFragColour = vec4(neighbour_colour.xyz*lighting, alpha);\r\n    return;\r\n}\r\n`\r\n);\r\n\r\n\r\nexport const volume_shader = {\r\n    vert_src: vert_shader,\r\n    frag_src: {\r\n        state: state_colouring,\r\n        xyz: xyz_colouring, \r\n        layer: layer_colouring,\r\n        radius: radius_colouring,\r\n        neighbour: neighbour_colouring,\r\n        neighbour_and_alive: neighbour_and_alive_colouring,\r\n    },\r\n};","import { Renderer } from \"./Renderer\";\r\n\r\nimport { VertexBufferObject, VertexArrayObject, VertexBufferLayout } from '../../../gl/VertexBuffer';\r\nimport { IndexBuffer } from \"../../../gl/IndexBuffer\";\r\nimport { Shader } from \"../../../gl/Shader\";\r\nimport { Uniform } from \"../../../gl/Uniform\";\r\nimport { cube_optimized } from \"../../../gl/CubeData\";\r\nimport { volume_shader } from \"../shaders/volume\";\r\n\r\nimport { Slider } from \"../../../ui/util/AdjustableValues\";\r\n\r\nexport class VolumeRenderer extends Renderer {\r\n    constructor(gl, props, params) {\r\n        super(gl, props, params);\r\n        [this.vao, this.ibo, this.index_data] = create_volume_data(gl);\r\n        this.add_params({\r\n            occlusion: new Slider(0, 1, 0.65, \"Amount that nearby cells darken the center cell\"),\r\n            step_factor: new Slider(0.1, 2, 1, \"Decrease to increase quality of volume render\")\r\n        });\r\n        this.create_shader();\r\n        this.params.colouring.listen(() => {\r\n            this.create_shader();\r\n        })\r\n    }\r\n\r\n    create_shader() {\r\n        let colour = this.params.colouring.current_option;\r\n        let vert_src = volume_shader.vert_src;\r\n        let frag_src = volume_shader.frag_src[colour];\r\n        this.shader = new Shader(this.gl, vert_src, frag_src);\r\n        this.add_uniforms(this.shader);\r\n    }\r\n\r\n    add_uniforms(shader) {\r\n        super.add_uniforms(shader);\r\n        let gl = this.gl;\r\n        shader.add_uniform(\"uOcclusion\", new Uniform(loc => gl.uniform1f(loc, this.params.occlusion.value)));\r\n        shader.add_uniform(\"uStepFactor\", new Uniform(loc => gl.uniform1f(loc, this.params.step_factor.value)));\r\n    }\r\n\r\n    bind() {\r\n        this.shader.bind();\r\n        this.vao.bind();\r\n        this.ibo.bind();\r\n    }\r\n\r\n    on_render() {\r\n        let gl = this.gl;\r\n        gl.enable(gl.CULL_FACE);\r\n        // perform culling check depending on whether camera is inside the viewing box\r\n        let [X, Y, Z] = this.props.size.value.map(n => Math.abs(n/2))\r\n        let [x, y, z] = this.props.camera.view_position.map(Math.abs);\r\n        if (x < X && y < Y && z < Z) {\r\n            gl.cullFace(gl.FRONT);\r\n        } else {\r\n            gl.cullFace(gl.BACK);\r\n        }\r\n\r\n        gl.drawElements(gl.TRIANGLES, this.ibo.count, gl.UNSIGNED_INT, 0);\r\n    }\r\n}\r\n\r\nconst create_volume_data = (gl) => {\r\n  let layout = new VertexBufferLayout(gl);\r\n  layout.push_attribute(0, 3, gl.FLOAT, false);\r\n  \r\n  let vertex_data = cube_optimized.vertex_data(0, 1, 1, 0, 1, 0);\r\n  let index_data = cube_optimized.index_data;\r\n\r\n  let vbo = new VertexBufferObject(gl, vertex_data, gl.STATIC_DRAW);\r\n  let ibo = new IndexBuffer(gl, index_data);\r\n\r\n  let vao = new VertexArrayObject(gl);\r\n  vao.add_vertex_buffer(vbo, layout);\r\n\r\n  return [vao, ibo, index_data];\r\n}","const basic_shading = (point_cloud) =>\r\n`#version 300 es\r\n\r\nprecision highp float;\r\nprecision highp int;\r\n\r\nin vec4 vColour;\r\nin vec3 vFragPos;\r\nin vec3 vNormal;\r\n\r\nout vec4 fragColour;\r\n\r\nstruct Light {\r\n    vec3 position;\r\n    vec3 colour;\r\n};\r\n\r\nuniform Light light;\r\n\r\nuniform vec3 uViewPosition;\r\nuniform float uSpecularPowerFactor;\r\nfloat uSpecularScattering = 0.1;\r\n\r\n// vec3 uSkyTop =  vec3( 0.1, 0.2, 0.8 ) * 0.5;\r\n// vec3 uSkyBottom = vec3( 0.5, 0.8, 1.0 ) * 1.5;\r\n// vec3 uSunColour = vec3(1.0, 1.2, 1.4);\r\n\r\nvec3 uSkyTop =  vec3( 0.8, 0.8, 0.8 ) * 0.5;\r\nvec3 uSkyBottom = vec3( 0.8, 0.8, 0.8 ) * 1.5;\r\n\r\nuniform vec3 uSunColour;\r\n// vec3 uSunColour = vec3(1.0, 1.0, 1.0);\r\n\r\n\r\nfloat uFloorHeight = 0.0;\r\nfloat uAmbientOcclusionStrength = 0.8;\r\nfloat uAmbientOcclusionRange = 100.0;\r\n\r\nuniform float uSkyStrength;\r\nuniform float uSunStrength;\r\n\r\nvec4 uFogColour = vec4(1,1,1,1);\r\nuniform float uFogNear;\r\nuniform float uFogFar;\r\nfloat uFogRange = 1000.0;\r\n\r\nvec3 get_sun_direction() {\r\n    return normalize(vec3(20.0, 40.3, -10.4));\r\n}\r\n\r\nvec3 get_sun_lighting(const vec3 normal) {\r\n    vec3 light_direction = -get_sun_direction();\r\n    float angle = max(dot(normal, -light_direction), 0.0);\r\n    return uSunColour * uSunStrength * angle;\r\n}\r\n\r\nvec3 get_sky_lighting(const vec3 normal) {\r\n    float sky_blend = normal.y * 0.5 + 0.5;\r\n    vec3 sky_light = mix(uSkyBottom, uSkyTop, sky_blend);\r\n    return sky_light * uSkyStrength;  \r\n}\r\n\r\nvec3 get_sky_colour(vec3 view_direction) {\r\n    vec3 sky_colour = mix(uSkyBottom, uSkyTop, max(view_direction.y, 0.0));\r\n    return sky_colour * uSkyStrength;\r\n}\r\n\r\nvec4 apply_ambient_occlusion(const vec4 colour, const vec3 position) {\r\n    float height = (position.y - uFloorHeight) / uAmbientOcclusionRange;\r\n    height = abs(height);\r\n    float occlusion = mix(1.0, 1.0-uAmbientOcclusionStrength, clamp(0.0, 1.0, height));\r\n    return vec4(colour.xyz * occlusion, colour.a);\r\n}\r\n\r\nvec4 apply_fog(const vec4 colour, float distance) {\r\n    float norm_distance = distance / uFogRange;\r\n    float fog_strength = clamp(norm_distance, uFogNear, uFogFar);\r\n    return mix(colour, uFogColour, fog_strength);\r\n}\r\n\r\nvoid main() {\r\n    vec3 normal = normalize(vNormal);\r\n    vec3 view_direction = normalize(uViewPosition - vFragPos);\r\n\r\n    vec3 sky_lighting = get_sky_lighting(normal);\r\n    vec3 sky_colour = get_sky_colour(view_direction);\r\n    vec3 sun_lighting = get_sun_lighting(normal);\r\n    vec3 total_lighting = sky_lighting + sun_lighting + sky_colour;\r\n\r\n    vec4 result = vec4(total_lighting, 1) * vColour; \r\n    // result = apply_ambient_occlusion(result, vFragPos);\r\n\r\n    float distance = length(uViewPosition-vFragPos);\r\n    result = apply_fog(result, distance);\r\n\r\n    fragColour = result;\r\n}`;\r\n\r\nconst basic_shading_alternate = (point_cloud) =>\r\n`#version 300 es\r\n\r\nprecision highp float;\r\nprecision highp int;\r\n\r\nin vec4 vColour;\r\nin vec3 vFragPos;\r\nin vec3 vNormal;\r\n\r\nout vec4 fragColour;\r\n\r\nstruct Light {\r\n    vec3 position;\r\n    vec3 colour;\r\n};\r\n\r\nuniform Light light;\r\n\r\nuniform float uAmbientStrength;\r\nuniform float uDiffuseStrength;\r\nuniform float uSpecularStrength;\r\n\r\nuniform vec3 uViewPosition;\r\nuniform float uSpecularPowerFactor;\r\nfloat uSpecularScattering = 0.1;\r\n\r\nvoid main() {\r\n    vec3 normal = normalize(vNormal);\r\n\r\n    vec3 ambient = uAmbientStrength * light.colour;\r\n\r\n    vec3 light_position = vec3(-uViewPosition.x, uViewPosition.y, -uViewPosition.z);\r\n    vec3 light_direction = normalize(light_position - vFragPos);\r\n\r\n    float diff = max(dot(normal, light_direction), 0.0);\r\n    vec3 diffuse = diff * uDiffuseStrength * light.colour;\r\n\r\n    vec3 view_direction = normalize(uViewPosition - vFragPos);\r\n    vec3 reflect_direction = reflect(-light_direction, normal);\r\n    float spec = dot(view_direction, reflect_direction);\r\n    spec = clamp(spec + uSpecularScattering, 0.0, 1.0);\r\n    spec = pow(spec, uSpecularPowerFactor);\r\n    vec3 specular = uSpecularStrength * spec * light.colour;\r\n    \r\n    vec3 total_lighting = (ambient + diffuse + specular) * vColour.xyz;\r\n    vec4 result = vec4(total_lighting, 1.0);\r\n\r\n    fragColour = result;\r\n}`;\r\n\r\nconst create_no_shader = (point_cloud) => (\r\n`#version 300 es\r\n\r\nprecision highp float;\r\nprecision highp int;\r\n\r\nuniform float uBrightness;\r\n\r\nin vec4 vColour;\r\n${point_cloud ? '' : 'in vec3 vNormal;'}\r\n${point_cloud ? '' : 'in vec3 vFragPos;'}\r\n\r\nout vec4 fragColour;\r\n\r\nvoid main() {\r\n    fragColour = vec4(vColour.xyz * uBrightness, vColour.a);\r\n}`);\r\n\r\nexport const fragment_shader_src = {\r\n    basic: basic_shading,\r\n    basic_alternate: basic_shading_alternate,\r\n    no_shading: create_no_shader\r\n}","const calculate_offset = (\r\n`vec3 calculate_offset(int index) {\r\n    float remain = float(index);\r\n    float z = floor(remain/(uGridSize.x*uGridSize.y));\r\n    remain = remain - z*uGridSize.x*uGridSize.y;\r\n    float y = floor(remain/uGridSize.x);\r\n    float x = remain - y*uGridSize.x; \r\n    return vec3(x, y, z);\r\n}`);\r\n\r\nconst calculate_point_cloud = (\r\n`mat3 Rx(float a) {\r\n    return mat3(\r\n        1., 0., 0.,\r\n        0., cos(a), sin(a),\r\n        0., -sin(a), cos(a)\r\n    );\r\n}\r\n\r\nmat3 Ry(float a) {\r\n    return mat3(\r\n        cos(a), 0., -sin(a),\r\n        0, 1., 0.,\r\n        sin(a), 0., cos(a)\r\n    );\r\n}\r\n\r\nvec3 calculate_point_cloud(const vec3 pos, const vec3 offset) {\r\n    vec3 point_position = offset+uCenter-(uGridSize/2.0);\r\n    vec3 view_direction = uViewPosition-point_position;\r\n    vec2 xz = vec2(view_direction.x, view_direction.z);\r\n    float r = length(xz);\r\n    float ay = atan(view_direction.x, view_direction.z);\r\n    float ax = -atan(view_direction.y, r);\r\n    mat3 R = Ry(ay) * Rx(ax);\r\n    return R*(pos-uCenter) + uCenter + offset; \r\n}`\r\n);\r\n\r\nconst get_cell_data = (\r\n`\r\nvec4 get_cell_data(vec3 offset) {\r\n    vec3 vol_tex_coords = offset / uGridSize;\r\n    vec4 cell = texture(uStateTexture, vol_tex_coords);\r\n    return cell;\r\n}\r\n`\r\n);\r\n\r\nconst calculate_scaling = (\r\n`\r\nvec3 scale_position(float scale, vec3 pos) {\r\n    float K = max(scale, float(1-uScalingEnabled));\r\n    vec3 delta = pos-uCenter;\r\n    return uCenter + (K*delta);\r\n}\r\n`\r\n);\r\n\r\nconst inline_imports = (\r\n`\r\n${calculate_offset}\r\n${calculate_scaling}\r\n${calculate_point_cloud}\r\n${get_cell_data}\r\n`\r\n);\r\n\r\nconst create_inline_snippet = (point_cloud) => (\r\n`\r\n// get basic info about cell\r\nvec3 offset = calculate_offset(gl_InstanceID);\r\nvec4 cell = get_cell_data(offset);\r\nfloat state = cell[0];\r\nfloat neighbours = cell[1];\r\nfloat lighting = 1.0-(neighbours*uOcclusion);\r\nvec4 state_colour =  texture(uStateColourTexture, vec2(state,0));\r\n`\r\n);\r\n\r\nconst create_inline_header = (point_cloud) => (\r\n`#version 300 es\r\n\r\nprecision highp float;\r\nprecision highp sampler3D;\r\nprecision highp sampler2D;\r\nprecision highp int;\r\n\r\nin vec3 position;\r\n${point_cloud ? '' : 'in vec3 normal;'}\r\n\r\n// MVP\r\nuniform mat4 uModel;\r\nuniform mat4 uView;\r\nuniform mat4 uProjection;\r\nuniform vec3 uViewPosition;\r\nuniform vec3 uGridSize;\r\n// params\r\nuniform int uScalingEnabled;\r\nuniform float uOcclusion;\r\n// texturing\r\nuniform sampler2D uStateColourTexture;\r\nuniform sampler2D uRadiusColourTexture;\r\nuniform sampler3D uStateTexture;\r\n\r\nvec3 uCenter = vec3(0.5, 0.5, 0.5);\r\n\r\nout vec4 vColour;\r\n${point_cloud ? '' : 'out vec3 vNormal;'}\r\n${point_cloud ? '' : 'out vec3 vFragPos;'}\r\n\r\n${inline_imports}\r\n`\r\n)\r\n\r\nconst create_inline_footer = (point_cloud) => (\r\n`\r\n${point_cloud ? \r\n    'vPosition = calculate_point_cloud(vPosition, offset);' : \r\n    'vPosition = vPosition + offset;'}\r\n\r\n// pass through data\r\nvPosition *= vColour.a;\r\nmat4 MVP = uProjection * uView * uModel;\r\n${point_cloud ? '' : 'vNormal = normal;'}\r\n${point_cloud ? '' : 'vFragPos = vec3(uModel * vec4(vPosition, 1.0));'}\r\ngl_Position = MVP * vec4(vPosition, 1.0);\r\n`\r\n);\r\n\r\nconst create_state_shader = (point_cloud) => (\r\n`${create_inline_header(point_cloud)}\r\nvoid main() {\r\n    ${create_inline_snippet(point_cloud)}\r\n    vec3 vPosition = scale_position(state, position);\r\n    vColour = vec4(state_colour.xyz*lighting, state_colour.a);\r\n    ${create_inline_footer(point_cloud)}\r\n}`);\r\n\r\nconst create_xyz_shading = (point_cloud) => (\r\n`${create_inline_header(point_cloud)}\r\nvoid main() {\r\n    ${create_inline_snippet(point_cloud)}\r\n    vec3 vPosition = scale_position(state, position);\r\n    vec3 xyz_colour = offset / uGridSize;\r\n    vColour = vec4(xyz_colour*lighting, state_colour.a);\r\n    ${create_inline_footer(point_cloud)}\r\n}\r\n`);\r\n\r\nconst create_layer_shading = (point_cloud) => (\r\n`${create_inline_header(point_cloud)}\r\nvoid main() {\r\n    ${create_inline_snippet(point_cloud)}\r\n    vec3 vPosition = scale_position(state, position);\r\n    vec3 distance = offset - (uGridSize/2.0);\r\n    float dist = length(distance/10.0);\r\n    dist = mod(dist, 1.0);\r\n    vec4 dist_colour = texture(uRadiusColourTexture, vec2(dist, 0.0));\r\n    vColour = vec4(dist_colour.xyz*lighting, state_colour.a);\r\n    ${create_inline_footer(point_cloud)}\r\n}`);\r\n\r\nconst create_radius_shading = (point_cloud) => (\r\n`${create_inline_header(point_cloud)}\r\nvoid main() {\r\n    ${create_inline_snippet(point_cloud)}\r\n    vec3 xyz_center = uGridSize/2.0;\r\n    vec3 distance = offset-xyz_center;\r\n    float radius = length(distance/xyz_center);\r\n    float total_repeats = 1.0;\r\n    radius = clamp(radius, 0.0, 1.0) * total_repeats;\r\n    vec4 radius_colour = texture(uRadiusColourTexture, vec2(radius, 0.0));\r\n\r\n    vec3 vPosition = scale_position(state, position);\r\n    vColour = vec4(radius_colour.xyz*lighting, state_colour.a);\r\n    ${create_inline_footer(point_cloud)}\r\n}`);\r\n\r\nconst create_neighbour_shading = (point_cloud) => (\r\n`${create_inline_header(point_cloud)}\r\nvoid main() {\r\n    ${create_inline_snippet(point_cloud)}\r\n    vec4 neighbour_colour = texture(uStateColourTexture, vec2(neighbours, 0.0));\r\n\r\n    vec3 vPosition = scale_position(neighbours, position);\r\n    vColour = vec4(neighbour_colour.xyz*lighting, neighbour_colour.a);\r\n    ${create_inline_footer(point_cloud)}\r\n}`);\r\n\r\nconst create_neighbour_and_alive_shading = (point_cloud) => (\r\n`${create_inline_header(point_cloud)}\r\nvoid main() {\r\n    ${create_inline_snippet(point_cloud)}\r\n    vec4 neighbour_colour = texture(uStateColourTexture, vec2(neighbours, 0.0));\r\n\r\n    vec3 vPosition = scale_position(neighbours, position);\r\n    vColour = vec4(neighbour_colour.xyz*lighting, state_colour.a*neighbour_colour.a);\r\n    ${create_inline_footer(point_cloud)}\r\n}`);\r\n\r\n\r\nexport const vertex_shader_src = {\r\n    state: create_state_shader,\r\n    xyz: create_xyz_shading,\r\n    layer: create_layer_shading,\r\n    radius: create_radius_shading,\r\n    neighbour: create_neighbour_shading,\r\n    neighbour_and_alive: create_neighbour_and_alive_shading,\r\n};","import { Renderer } from \"./Renderer\";\r\n\r\nimport { VertexBufferObject, VertexArrayObject, VertexBufferLayout } from '../../../gl/VertexBuffer';\r\nimport { Shader } from \"../../../gl/Shader\";\r\nimport { IndexBuffer } from \"../../../gl/IndexBuffer\";\r\n\r\nimport { Dropdown, Slider, Toggle } from \"../../../ui/util/AdjustableValues\";\r\nimport { Uniform } from \"../../../gl/Uniform\";\r\n\r\nimport { fragment_shader_src } from \"../shaders/fragment_shader\";\r\nimport { vertex_shader_src } from \"../shaders/vertex_shader\";\r\n\r\nexport class PointCloudRenderer extends Renderer {\r\n    constructor(gl, props, params) {\r\n        super(gl, props, params);\r\n        this.add_params({\r\n            point_type: new Dropdown(['quad', 'tri'], 0, \"Render quad or triangle for each point\"),\r\n            brightness: new Slider(0, 1, 1, \"Global brightness\"),\r\n            occlusion: new Slider(0, 1, 0.65, \"Amount nearby cells darken the center cell\"),\r\n            scaling_enabled: new Toggle(0, \"Size of cell varies with its value\"),\r\n        });\r\n        this.data = {\r\n            quad: create_quad_data(gl),\r\n            tri: create_triangle_data(gl),\r\n        };\r\n        this.create_shader();\r\n        this.params.colouring.listen(colouring => {\r\n            this.create_shader();\r\n        });\r\n    }\r\n\r\n    create_shader() {\r\n        let colour = this.params.colouring.current_option;\r\n        let vert_src = vertex_shader_src[colour](true);\r\n        let frag_src = fragment_shader_src.no_shading(true);\r\n        this.shader = new Shader(this.gl, vert_src, frag_src);\r\n        this.add_uniforms(this.shader);\r\n    }\r\n\r\n    add_uniforms(shader) {\r\n        super.add_uniforms(shader);\r\n        let gl = this.gl;\r\n        shader.add_uniform(\"uBrightness\", new Uniform(loc => gl.uniform1f(loc, this.params.brightness.value)));\r\n        shader.add_uniform(\"uOcclusion\", new Uniform(loc => gl.uniform1f(loc, this.params.occlusion.value)));\r\n        shader.add_uniform(\"uScalingEnabled\", new Uniform(loc => gl.uniform1i(loc, this.params.scaling_enabled.value)));\r\n    }\r\n\r\n    get current_data() {\r\n        return this.data[this.params.point_type.current_option];\r\n    }\r\n\r\n    bind() {\r\n        this.shader.bind();\r\n        let data = this.current_data;\r\n        data.vao.bind();\r\n        data.ibo.bind();\r\n    }\r\n\r\n    on_render() {\r\n        let gl = this.gl;\r\n        let data = this.current_data;\r\n        let [x, y, z] = this.props.size.value;\r\n        let total_cells = x*y*z;\r\n        gl.enable(gl.CULL_FACE);\r\n        gl.cullFace(gl.BACK);\r\n        gl.drawElementsInstanced(gl.TRIANGLES, data.ibo.count, gl.UNSIGNED_INT, data.index_data, total_cells); \r\n    }\r\n}\r\n\r\n// square for each point\r\nconst create_quad_data = (gl) => {\r\n    let layout = new VertexBufferLayout(gl);\r\n    layout.push_attribute(0, 3, gl.FLOAT, false);\r\n\r\n    let vertex_data = new Float32Array([0, 1, 0.5,\r\n                                        1, 1, 0.5,\r\n                                        0, 0, 0.5,\r\n                                        1, 0, 0.5]);\r\n    let index_data = new Uint32Array([2, 1, 0, 2, 3, 1]);\r\n\r\n    let vbo = new VertexBufferObject(gl, vertex_data, gl.STATIC_DRAW);\r\n    let ibo = new IndexBuffer(gl, index_data);\r\n\r\n    let vao = new VertexArrayObject(gl);\r\n    vao.add_vertex_buffer(vbo, layout);\r\n    return {vao: vao, ibo: ibo, index_data: index_data};\r\n}\r\n\r\n// triangle for each point\r\nconst create_triangle_data = (gl) => {\r\n    let layout = new VertexBufferLayout(gl);\r\n    layout.push_attribute(0, 3, gl.FLOAT, false);\r\n\r\n    let vertex_data = new Float32Array([-0.5, -0.5, 0.5,\r\n                                        1.5, -0.5, 0.5,\r\n                                        0.5, -1.5, 0.5]);\r\n    let index_data = new Uint32Array([2, 1, 0]);\r\n\r\n    let vbo = new VertexBufferObject(gl, vertex_data, gl.STATIC_DRAW);\r\n    let ibo = new IndexBuffer(gl, index_data);\r\n\r\n    let vao = new VertexArrayObject(gl);\r\n    vao.add_vertex_buffer(vbo, layout);\r\n    return {vao: vao, ibo: ibo, index_data: index_data};\r\n}","import { Renderer } from \"./Renderer\";\r\n\r\nimport { VertexBufferObject, VertexArrayObject, VertexBufferLayout } from '../../../gl/VertexBuffer';\r\nimport { Shader } from \"../../../gl/Shader\";\r\nimport { UniformVec3f, Uniform } from \"../../../gl/Uniform\";\r\nimport { IndexBuffer } from \"../../../gl/IndexBuffer\";\r\nimport { cube } from \"../../../gl/CubeData\";\r\n\r\nimport { Toggle, Slider, Dropdown, Color } from \"../../../ui/util/AdjustableValues\";\r\nimport { fragment_shader_src } from \"../shaders/fragment_shader\";\r\nimport { vertex_shader_src } from \"../shaders/vertex_shader\";\r\n\r\nimport { vec3 } from \"gl-matrix\";\r\n\r\n\r\nexport class VoxelRenderer extends Renderer {\r\n    constructor(gl, props, params) {\r\n        super(gl, props, {});\r\n        this.shading_params = {\r\n            ambient_strength: new Slider(0, 1, 0.4, \"Amount of global lighting\"),\r\n            diffuse_strength: new Slider(0, 1, 0.95, \"Amount of light scattering\"),\r\n            specular_strength: new Slider(0, 1, 0.6, \"Amount of light reflection\"),\r\n            specular_power_factor: new Slider(0, 128.0, 4.0, \"Strength of the light reflection\"),\r\n            scaling_enabled: new Toggle(0, \"Change size of cell depending on its value (state or total neighbours)\"),\r\n            fog_near: new Slider(0, 1, 0, \"Minimum distance of fog\"),\r\n            fog_far: new Slider(0, 1, 0, \"Maximum distance of fog\"),\r\n            sun_strength: new Slider(0, 1, 0.95, \"Strength of the sun\"),\r\n            sky_strength: new Slider(0, 1, 0.25, \"Strength of sky lighting\"),\r\n            brightness: new Slider(0, 1, 1.0, \"Amount of global lighting\"),\r\n            occlusion: new Slider(0, 1, 0.0, \"Amount nearby cells darken the center cell\"),\r\n            light_colour: new Color(vec3.fromValues(255, 255, 255), \"Colour of sun\"),\r\n        };\r\n\r\n        this.global_params = {\r\n            ...params,\r\n            shading: new Dropdown(Object.keys(fragment_shader_src), 0, \"Different methods of rendering\"),\r\n        };\r\n\r\n        this.shading_keys = {\r\n          basic: ['occlusion', 'sun_strength', 'sky_strength', 'fog_near', 'fog_far', 'light_colour', 'scaling_enabled'],\r\n          basic_alternate: ['occlusion', 'ambient_strength', 'diffuse_strength', 'specular_strength', 'specular_power_factor', 'light_colour', 'scaling_enabled'],\r\n          no_shading: ['occlusion', 'brightness', 'scaling_enabled']\r\n        };\r\n\r\n        this.update_props({\r\n            light_position: vec3.create()\r\n        });\r\n        [this.vao, this.ibo, this.index_data] = create_cube_data(gl);\r\n        this.create_shader();\r\n        this.params.colouring.listen(() => this.create_shader());\r\n        this.params.shading.listen(() => this.create_shader());\r\n    }\r\n\r\n    create_shader() {\r\n        this.load_params();\r\n        let colour = this.global_params.colouring.current_option;\r\n        let shading = this.global_params.shading.current_option;\r\n        let vert_src = vertex_shader_src[colour](false);\r\n        let frag_src = fragment_shader_src[shading](false);\r\n        this.shader = new Shader(this.gl, vert_src, frag_src);\r\n        this.add_uniforms(this.shader);\r\n    }\r\n\r\n    // depending on shading type, we get different parameters to configure\r\n    load_params() {\r\n        let params = {};\r\n        let shading = this.global_params.shading.current_option;\r\n        let keys = this.shading_keys[shading];\r\n        for (let key of keys) {\r\n            params[key] = this.shading_params[key];\r\n        }\r\n        this.params = {...this.global_params, ...params};\r\n    }\r\n\r\n    add_uniforms(shader) {\r\n        super.add_uniforms(shader);\r\n        let gl = this.gl;\r\n        // lighting\r\n        shader.add_uniform('light.position', new UniformVec3f(gl, this.props.light_position));\r\n        shader.add_uniform('light.colour', new Uniform(loc => {\r\n            let c = this.shading_params.light_colour.value;\r\n            gl.uniform3f(loc, c[0]/255, c[1]/255, c[2]/255);\r\n        }));\r\n        shader.add_uniform('uSunColour', new Uniform(loc => {\r\n            let c = this.shading_params.light_colour.value;\r\n            gl.uniform3f(loc, c[0]/255, c[1]/255, c[2]/255);\r\n        }))\r\n        // // lighting params\r\n        shader.add_uniform(\"uAmbientStrength\", new Uniform(loc => gl.uniform1f(loc, this.params.ambient_strength.value)));\r\n        shader.add_uniform(\"uDiffuseStrength\", new Uniform(loc => gl.uniform1f(loc, this.params.diffuse_strength.value)));\r\n        shader.add_uniform(\"uSpecularStrength\", new Uniform(loc => gl.uniform1f(loc, this.params.specular_strength.value)));\r\n        shader.add_uniform(\"uSpecularPowerFactor\", new Uniform(loc => gl.uniform1f(loc, this.params.specular_power_factor.value)));\r\n        shader.add_uniform(\"uBrightness\", new Uniform(loc => gl.uniform1f(loc, this.params.brightness.value)));\r\n        shader.add_uniform(\"uOcclusion\", new Uniform(loc => gl.uniform1f(loc, this.params.occlusion.value)));\r\n        // post processing\r\n        shader.add_uniform(\"uScalingEnabled\", new Uniform(loc => gl.uniform1i(loc, this.params.scaling_enabled.value)));\r\n        shader.add_uniform(\"uFogNear\", new Uniform(loc => gl.uniform1f(loc, this.params.fog_near.value)));\r\n        shader.add_uniform(\"uFogFar\", new Uniform(loc => gl.uniform1f(loc, this.params.fog_far.value)));\r\n        shader.add_uniform(\"uSunStrength\", new Uniform(loc => gl.uniform1f(loc, this.params.sun_strength.value)));\r\n        shader.add_uniform(\"uSkyStrength\", new Uniform(loc => gl.uniform1f(loc, this.params.sky_strength.value)));\r\n    }\r\n\r\n    bind() {\r\n        this.shader.bind();\r\n        this.vao.bind();\r\n        this.ibo.bind();\r\n    }\r\n\r\n    on_render() {\r\n        let gl = this.gl;\r\n        let [x, y, z] = this.props.size.value;\r\n        let total_cells = x*y*z;\r\n        gl.enable(gl.CULL_FACE);\r\n        gl.cullFace(gl.BACK);\r\n        gl.drawElementsInstanced(gl.TRIANGLES, this.ibo.count, gl.UNSIGNED_INT, this.index_data, total_cells); \r\n    }\r\n}\r\n\r\nconst create_cube_data = (gl) => {\r\n  let layout = new VertexBufferLayout(gl);\r\n  layout.push_attribute(0, 3, gl.FLOAT, false);\r\n  layout.push_attribute(1, 3, gl.FLOAT, false);\r\n\r\n  let vertex_data = cube.vertex_data(0, 1, 1, 0, 1, 0);\r\n  let index_data = cube.index_data;\r\n\r\n  let vbo = new VertexBufferObject(gl, vertex_data, gl.STATIC_DRAW);\r\n  let ibo = new IndexBuffer(gl, index_data);\r\n\r\n  let vao = new VertexArrayObject(gl);\r\n  vao.add_vertex_buffer(vbo, layout);\r\n\r\n  return [vao, ibo, index_data];\r\n}","import { Dropdown } from '../../ui/util/AdjustableValues';\r\nimport { VolumeRenderer } from './renderers/VolumeRenderer';\r\nimport { PointCloudRenderer } from './renderers/PointCloudRenderer';\r\nimport { VoxelRenderer } from './renderers/VoxelRenderer';\r\nimport { vertex_shader_src } from './shaders/vertex_shader';\r\n\r\nexport class ShaderManager {\r\n  constructor(gl, size, camera) {\r\n    this.gl = gl;\r\n    this.size = size;\r\n    this.camera = camera;\r\n\r\n    let props = {\r\n      size: this.size,\r\n      camera: this.camera\r\n    };\r\n\r\n    this.global_params = {\r\n      colouring: new Dropdown(Object.keys(vertex_shader_src), 0, 'Method of colouring each cell'),\r\n    };\r\n\r\n    this.renderers = {\r\n      volume: new VolumeRenderer(gl, props, this.global_params),\r\n      point: new PointCloudRenderer(gl, props, this.global_params),\r\n      voxel: new VoxelRenderer(gl, props, this.global_params),\r\n    };\r\n\r\n    {\r\n      const tooltip = (\r\n        \"Method of rendering the grid\\n\"+\r\n        \"Volume: Fastest but low quality (Uses raycasting)\\n\"+\r\n        \"Point: Represents each cell as a floating quad\\n\"+\r\n        \"Voxel: Slowest but highest quality (Like Minecraft)\\n\"\r\n      );\r\n      this.renderer_type = new Dropdown(Object.keys(this.renderers), 0, tooltip);\r\n    }\r\n  }\r\n\r\n  get current_renderer() {\r\n    let key = this.renderer_type.current_option;\r\n    return this.renderers[key];\r\n  }\r\n\r\n  select_renderer(index) {\r\n    this.renderer_type.value = index;\r\n  }\r\n\r\n  get params() {\r\n    return this.current_renderer.params;\r\n  }\r\n\r\n  update_params(params) {\r\n    this.current_renderer.update_params(params);\r\n  }\r\n\r\n  bind() {\r\n    this.current_renderer.bind();\r\n  }\r\n\r\n  on_render() {\r\n    this.current_renderer.on_render();\r\n  }\r\n\r\n\r\n}\r\n","import  { Slider } from '../ui/util/AdjustableValues';\r\n/**\r\n * Serialisation for web worker\r\n */\r\n\r\n\r\nclass SerializedRandomiser {\r\n    constructor(type, params) {\r\n        this.type = type;\r\n        this.params = params;\r\n    }\r\n\r\n    to_json() {\r\n        let params = {};\r\n        for (let key in this.params) {\r\n            params[key] = this.params[key].value;\r\n        }\r\n        return {\r\n            type: this.type,\r\n            params: params \r\n        };\r\n    }\r\n}\r\n\r\nexport class SeedCrystalSerialized extends SerializedRandomiser {\r\n    constructor(density=0.2, radius=0.1) {\r\n        super('Seed Crystal', {\r\n            density: new Slider(0, 1, density, \"Amount of region to fill\"),\r\n            radius: new Slider(0, 0.5, radius, \"Radius of cube to fill (Relative to size of 3D grid)\"),\r\n        });\r\n    }\r\n}\r\n\r\nexport class SeedCrystalAbsoluteSerialized extends SerializedRandomiser {\r\n    constructor(density=0.2, radius=3) {\r\n        super('Seed Crystal Absolute', {\r\n            density: new Slider(0, 1, density, \"Amount of region to fill\"),\r\n            radius: new Slider(0, 100, radius, \"Radius of cube to fill (Number of cells for radius)\"),\r\n        });\r\n    }\r\n}\r\n\r\nexport class RuleSerialized {\r\n    constructor(remain, become, total_states, neighbour) {\r\n        this.remain = remain;\r\n        this.become = become;\r\n        this.total_states = total_states;\r\n        this.neighbour = neighbour;\r\n    }\r\n\r\n    to_json() {\r\n        return this;\r\n    }\r\n}\r\n\r\nexport class NeighbourSerialized {\r\n    constructor(type, max) {\r\n        this.type = type;\r\n        this.max = max;\r\n    }\r\n    \r\n    to_json() {\r\n        return this;\r\n    }\r\n}","import { RuleSerialized, NeighbourSerialized } from \"../simulation/Serialised\";\r\n\r\nconst NeighbourRules = {\r\n  'M': new NeighbourSerialized('M', 26),\r\n  'VN': new NeighbourSerialized('VN', 6),\r\n};\r\n\r\nexport class RuleReader {\r\n  generate(string) {\r\n    string = string.replace(' ', '');\r\n    let substrings = string.split('/');\r\n    if (substrings.length !== 4) {\r\n      throw new Error(`Expected Range/Range/Number/(VN or M).\\nEg: 0,1-4,5/0-26/5/VN`);\r\n    }\r\n    let [remain_alive, become_alive, total_states, neighbour] = substrings;\r\n\r\n\r\n    if (NeighbourRules[neighbour] === undefined) {\r\n      throw new Error(`Invalid neighbourhood. Expected M or VN.`);\r\n    }\r\n\r\n    total_states = this.convert_to_number(total_states);\r\n    if (total_states <= 1) {\r\n      throw new Error(`Invalid total states. Expected 2 or more states`);\r\n    }\r\n\r\n\r\n    neighbour = NeighbourRules[neighbour];\r\n    let remain = this.retrieve_rule(remain_alive);\r\n    let become = this.retrieve_rule(become_alive);\r\n\r\n    return new RuleSerialized(remain, become, total_states, neighbour);\r\n  }\r\n\r\n  retrieve_rule(number_range) {\r\n    let N = new Array(27); \r\n    N.fill(false, 0, -1);\r\n\r\n    let numbers = number_range.split(',');\r\n    for (let number of numbers) {\r\n      // invalid empty number\r\n      if (number.length === 0) {\r\n        throw new Error(`Invalid number, cannot be ''`);\r\n      }\r\n      // If starts with - in front, then not valid\r\n      if (number[0] === '-') {\r\n        throw new Error(`Range must have number in front: ${number}\\nEg. 0-26`);\r\n      }\r\n      // If it ends with -, then not valid\r\n      if (number[number.length-1] === '-') {\r\n        throw new Error(`Range must have number at back: ${number}\\nEg. 0-26`);\r\n      }\r\n      // Check if all are numbers\r\n      let range = number.split('-').map(n => this.convert_to_number(n));\r\n      if (range.length === 1) {\r\n        let n = range[0];\r\n        this.assert_number(n);\r\n\r\n        N[n] = true;\r\n      } else if (range.length === 2) {\r\n        let [start, end] = range;\r\n        if (end < start) {\r\n          throw new Error(`Invalid range: ${start}-${end}. Must be ordered.`);\r\n        }\r\n        for (let n = start; n <= end; n++) {\r\n          this.assert_number(n);\r\n          N[n] = true;\r\n        }\r\n      } else {\r\n        throw new Error(`Too many numbers in range: ${number_range}. Must be 1 or 2`);\r\n      }\r\n    }\r\n\r\n    return N;\r\n  }\r\n\r\n  convert_to_number(word) {\r\n    if (isNaN(word)) {\r\n      throw new Error(`${word} is not a valid number`);\r\n    }\r\n    return Number(word);\r\n  }\r\n\r\n  // 3**3 - 1 = 26 possible neighbours, 27 possible values 0-26\r\n  assert_number(n) {\r\n    if (n < 0 || n > 26) {\r\n      throw new Error(`Invalid number: ${n}. Must be between 0 to 26`);\r\n    }\r\n  }\r\n}","import { RuleReader } from \"../RuleReader\";\r\n\r\nexport class Entry {\r\n  constructor(name, ca_string, randomiser) {\r\n    this.name = name;\r\n    this.description = ca_string;\r\n    let reader = new RuleReader();\r\n    let rule = reader.generate(ca_string);\r\n    this.rule = rule;\r\n    this.randomiser = randomiser;\r\n  }\r\n}\r\n\r\n","import { SeedCrystalSerialized, SeedCrystalAbsoluteSerialized } from \"../../simulation/Serialised\";\r\nimport { Entry } from \"./Entry\";\r\n\r\nexport class DefaultEntryBrowser {\r\n  constructor() {\r\n    this.entries = [];\r\n    this.listeners = new Set();\r\n    // our default entries\r\n    this.add_entry(new Entry('Amoeba-1',  '9-26/5-7,12-13,15/16/M', new SeedCrystalAbsoluteSerialized(0.3, 5)));\r\n    this.add_entry(new Entry('445',       '4/4/5/M',                new SeedCrystalSerialized(0.05, 0.5)));\r\n    this.add_entry(new Entry('Builder 2', '6,9/4,6,8-9/10/M',       new SeedCrystalAbsoluteSerialized(0.35, 7)));\r\n    this.add_entry(new Entry('Crystal Growth 1', '0-6/1,3/2/VN',    new SeedCrystalAbsoluteSerialized(1.0, 1)));\r\n    this.add_entry(new Entry('Crystal Growth 2', '1-3/1-3/5/VN',    new SeedCrystalAbsoluteSerialized(1.0, 1)));\r\n    this.add_entry(new Entry('Clouds 1',  '13-26/13-14,17-19/2/M',  new SeedCrystalSerialized(0.5, 0.5)));\r\n    this.add_entry(new Entry('Slow Decay', '8,11,13-26/13-26/5/M',  new SeedCrystalSerialized(0.45, 1.0)));\r\n    this.add_entry(new Entry('Spiky Growth 1', '7-26/4,12-13,15/10/M', new SeedCrystalAbsoluteSerialized(0.32, 7)));\r\n    this.add_entry(new Entry('Ripple Cube', '8-26/4,12-13,15/10/M', new SeedCrystalAbsoluteSerialized(0.35, 14)));\r\n    this.add_entry(new Entry('Amoeba-2',  '9-26/5-7,12-13,15/5/M',  new SeedCrystalAbsoluteSerialized(0.3, 5)));\r\n    this.add_entry(new Entry('Builder 1', '6,9/4,6,8-9/10/M',       new SeedCrystalAbsoluteSerialized(0.35, 7)));\r\n    this.add_entry(new Entry('Pyroclastic', '4-7/6-8/10/M',         new SeedCrystalAbsoluteSerialized(0.2, 5)));\r\n    this.add_entry(new Entry('678 678',   '6-8/6-8/3/M',            new SeedCrystalSerialized(0.3)));\r\n\r\n    this.select(0);\r\n  }\r\n\r\n  listen_select(listener) {\r\n    this.listeners.add(listener);\r\n  }\r\n\r\n  notify(entry) {\r\n    for (let listener of this.listeners) {\r\n      listener(entry);\r\n    }\r\n  }\r\n\r\n  get selected_entry() {\r\n    return this.entries[this.current_index];\r\n  }\r\n\r\n  select(idx) {\r\n    this.current_index = idx;\r\n    let entry = this.selected_entry;\r\n    this.notify(entry);\r\n  }\r\n\r\n  add_entry(entry) {\r\n    this.entries.push(entry);\r\n  }\r\n}","import { Entry } from \"./Entry\";\r\n\r\nexport class StoredEntryBrowser {\r\n  constructor() {\r\n    this.entries = [];\r\n\r\n    this.listeners = new Set();\r\n\r\n    this.db_cfg = {\r\n      name: 'entries_db',\r\n      store: 'entries_os'\r\n    };\r\n\r\n    let db_request = window.indexedDB.open(this.db_cfg.name, 1);\r\n    db_request.onerror = (ev) => console.error(`${this.db_cfg.name} failed to open`);\r\n    db_request.onsuccess = (ev) => {\r\n      this.db = db_request.result;\r\n      this.on_db_load();\r\n    };\r\n\r\n    db_request.onupgradeneeded = (ev) => {\r\n      let db = ev.target.result;\r\n      let store = db.createObjectStore(this.db_cfg.store, { keyPath:'id', autoIncrement: true});\r\n      store.createIndex('name', 'name', {unique: false});\r\n      store.createIndex('ca_string', 'ca_string', {unique: false});\r\n    }\r\n\r\n    this.current_index = -1;\r\n  }\r\n\r\n  listen_select(listener) {\r\n    this.listeners.add(listener);\r\n  }\r\n\r\n  notify(entry) {\r\n    for (let listener of this.listeners) {\r\n      listener(entry);\r\n    }\r\n  }\r\n\r\n  on_db_load() {\r\n    // this.add_user_entry('Test', '0-6/1,3/2/VN');\r\n    let cfg = this.db_cfg;\r\n    let store = this.db.transaction(cfg.store).objectStore(cfg.store);\r\n    let corrupted_ids = [];\r\n    store.openCursor().onsuccess = (ev) => {\r\n      let cursor = ev.target.result;\r\n      if (cursor) {\r\n        let {name, ca_string, id} = cursor.value;\r\n        try {\r\n          let entry = new StoredEntry(name, ca_string, id);\r\n          this.add_entry(entry);\r\n        } catch (ex) {\r\n          corrupted_ids.push(id);\r\n        }\r\n        cursor.continue();\r\n        return;\r\n      }      \r\n      // end of cursor list, this lets remove all corrupted ids\r\n      this.purge_corrupted_ids(corrupted_ids);\r\n    }\r\n  }\r\n\r\n  purge_corrupted_ids(ids) {\r\n    if (ids && ids.length > 0) {\r\n      console.warn('Purging corrupted ids');\r\n      console.warn(ids);\r\n    }\r\n    let cfg = this.db_cfg;\r\n    let store = this.db.transaction([cfg.store], 'readwrite').objectStore(cfg.store);\r\n    for (let id of ids) {\r\n      store.delete(id);\r\n    }\r\n  }\r\n\r\n  edit(index, name, ca_string) {\r\n    let original = this.entries[index];\r\n    if (!original) return;\r\n\r\n    let replace = new StoredEntry(name, ca_string, original.id);\r\n\r\n    let db = this.db;\r\n    let cfg = this.db_cfg;\r\n\r\n    if (!db) {\r\n      console.error(`${cfg.store} failed to load`);\r\n      return;\r\n    } \r\n\r\n    let data = {id: original.id, name, ca_string};\r\n    let transaction = db.transaction([cfg.store], 'readwrite');\r\n    let store = transaction.objectStore(cfg.store);\r\n    store.put(data);\r\n\r\n    let promise = new Promise((resolve, reject) => {\r\n      transaction.oncomplete = (ev) => {\r\n        this.entries[index] = replace;\r\n        this.entries = [...this.entries];\r\n        if (this.current_index === index) {\r\n          this.notify(replace);\r\n        }\r\n        resolve(true);\r\n      }\r\n      transaction.onerror = () => {\r\n        console.error(`Failed to update entry: ${original} to ${replace}`);\r\n        reject(`Failed to update entry: ${original} to ${replace}`);\r\n      }\r\n    });\r\n    return promise;\r\n  }\r\n\r\n  create(name, ca_string) {\r\n    // id is undefined, add in later\r\n    let entry = new StoredEntry(name, ca_string);\r\n\r\n    let db = this.db;\r\n    let cfg = this.db_cfg;\r\n    if (!db) {\r\n      console.error(`${cfg.store} failed to load`);\r\n      return;\r\n    }\r\n    let data = {name, ca_string};\r\n    let transaction = db.transaction([cfg.store], 'readwrite');\r\n    let store = transaction.objectStore(cfg.store);\r\n    let request = store.add(data);\r\n\r\n    return new Promise((resolve, reject) => {\r\n      request.onsuccess = (ev) => {\r\n        let id = ev.target.result;\r\n        entry.id = id;\r\n        this.add_entry(entry);\r\n        resolve(true);\r\n      }\r\n      request.onerror = () => {\r\n        console.error(`Failed to add entry: ${name}, ${ca_string}`);\r\n        reject(`Failed to add entry: ${name}, ${ca_string}`);\r\n      }\r\n    });\r\n }\r\n\r\n  delete(idx) {\r\n    // ignore invalid index\r\n    if (idx < 0 || idx >= this.entries.length) return;\r\n    // map expected current index after removal\r\n    let current_index = this.current_index;\r\n    // if same item, then we want the index to point to same location in list after change\r\n    // this will be the next item\r\n    if (this.current_index === idx) {\r\n      current_index = this.current_index;\r\n    // if an item behind selected item, then we want to keep the selected item\r\n    // this will be now an index behind\r\n    } else if (this.current_index > idx) {\r\n      current_index = this.current_index-1; \r\n    // if selected item behind deleted item, then dont do anything\r\n    } else {\r\n      current_index = this.current_index;\r\n    }\r\n    // remove from db\r\n    let entry = this.entries[idx];\r\n    let cfg = this.db_cfg;\r\n    let transaction = this.db.transaction([cfg.store], 'readwrite');\r\n    let store = transaction.objectStore(cfg.store);\r\n    store.delete(entry.id);\r\n\r\n    // if request was successful, then modify entries array inplace\r\n    // send notification\r\n    return new Promise((resolve, reject) => {\r\n      transaction.oncomplete = () => {\r\n        let entries = this.entries;\r\n        this.entries = [...entries.slice(0, idx), ...entries.slice(idx + 1)];\r\n        // always try to figure out a viable selection before defaulting to nothing\r\n        current_index = Math.max(current_index, 0);\r\n        current_index = Math.min(current_index, this.entries.length-1);\r\n        // if no entries left, then undefined entry\r\n        if (this.entries.length === 0) {\r\n          current_index = -1;\r\n        }\r\n        this.select(current_index);\r\n        resolve(true);\r\n      }\r\n    });\r\n  }\r\n\r\n  get selected_entry() {\r\n    return this.entries[this.current_index];\r\n  }\r\n\r\n  select(idx) {\r\n    this.current_index = idx;\r\n    if (this.current_index < 0 || this.current_index >= this.entries.length) {\r\n      this.notify(undefined);\r\n      return;\r\n    }\r\n    let entry = this.selected_entry;\r\n    this.notify(entry);\r\n  }\r\n\r\n  add_entry(entry) {\r\n    this.entries = [...this.entries, entry]; \r\n  }\r\n}\r\n\r\nclass StoredEntry extends Entry {\r\n  constructor(name, ca_string, id) {\r\n    super(name, ca_string);\r\n    this.id = id;\r\n  }\r\n}","import { DefaultEntryBrowser } from './DefaultEntryBrowser';\r\nimport { StoredEntryBrowser } from './StoredEntryBrowser';\r\n\r\nexport class EntryBrowser {\r\n  constructor() {\r\n    this.listeners = new Set();\r\n\r\n    this.browsers = {\r\n      'Default': new DefaultEntryBrowser(),\r\n      'User': new StoredEntryBrowser(),\r\n    };\r\n\r\n    this.current_browser_key = 'System';\r\n\r\n    this.browsers['Default'].listen_select((entry) => {\r\n      this.notify(entry);\r\n    })\r\n\r\n    this.browsers['User'].listen_select((entry) => {\r\n      if (entry === undefined) {\r\n        this.select('Default', 0);  \r\n      } else {\r\n        this.notify(entry);\r\n      }\r\n    })\r\n  }\r\n\r\n  listen_select(listener) {\r\n    this.listeners.add(listener);\r\n  }\r\n\r\n  notify(entry) {\r\n    for (let listener of this.listeners) {\r\n      listener(entry);\r\n    }\r\n  }\r\n\r\n  get selected_entry() {\r\n    let entry = this.selected_browser.selected_entry;\r\n    return entry;\r\n  }\r\n\r\n  get selected_browser() {\r\n    let browser = this.browsers[this.current_browser_key];\r\n    return browser;\r\n  }\r\n\r\n  get_entries(key) {\r\n    return this.browsers[key].entries;\r\n  }\r\n\r\n  select(key, index) {\r\n    this.current_browser_key = key;\r\n    this.selected_browser.select(index);\r\n  }\r\n\r\n  // wrap around stored database\r\n  delete(key, index) {\r\n    return new Promise((resolve, reject) => {\r\n      if (key !== 'User') {\r\n        reject('Can only delete user defined rules');\r\n        return;\r\n      }\r\n      let stored = this.browsers['User'];\r\n      stored.delete(index)\r\n        .then(v => resolve(v), err => reject(err));\r\n    });\r\n  }\r\n\r\n  create(name, ca_string) {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        let stored = this.browsers['User'];\r\n        stored.create(name, ca_string)\r\n          .then(v => resolve(v), err => reject(err));\r\n      } catch (ex) {\r\n        reject(String(ex.message));\r\n      }\r\n    });\r\n  }\r\n\r\n  edit(key, index, name, ca_string) {\r\n    let stored = this.browsers[key];\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        let promise = stored.edit(index, name, ca_string);\r\n        promise.then((val) => resolve(val), (err) => reject(err));\r\n      } catch (ex) {\r\n        reject(String(ex.message));\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import { update_statistics } from \"../ui/actions\";\r\n\r\nexport class Statistics {\r\n    constructor(store) {\r\n        this.store = store;\r\n        this.data = {\r\n            completed_blocks: 0,\r\n            frame_time: 0,\r\n            total_blocks: 0,\r\n            total_steps: 0,\r\n            texture_data_update: 0,\r\n            texture_data_upload: 0,\r\n            draw_time: 0,\r\n        };\r\n        this.cooldown = false;\r\n    }\r\n\r\n    force_update() {\r\n        if (this.cooldown) {\r\n            return;\r\n        }\r\n\r\n        this.store.dispatch((dispatch) => {\r\n            this.cooldown = true;\r\n            setTimeout(() => {\r\n                dispatch(update_statistics(this));\r\n                setTimeout(() => this.cooldown = false, 30);\r\n            }, 0);\r\n        });\r\n    }\r\n\r\n    recieve(key, value=undefined) {\r\n        if (value !== undefined) {\r\n            this.recieve_key(key, value);\r\n        } else {\r\n            this.recieve_batch(key);\r\n        }\r\n    }\r\n\r\n    recieve_key(key, value) {\r\n        this.data[key] = value;\r\n        this.data = {...this.data};\r\n        this.force_update();\r\n    }\r\n\r\n    recieve_batch(data) {\r\n        for (let key in data) {\r\n            let value = data[key];\r\n            this.data[key] = value;\r\n        }\r\n        this.data = {...this.data};\r\n        this.force_update();\r\n    }\r\n\r\n}","import { SeedCrystalSerialized, SeedCrystalAbsoluteSerialized } from \"../simulation/Serialised\";\r\n\r\nexport class RandomiserManager {\r\n    constructor() {\r\n        this.entries = [];\r\n\r\n        this.add_randomiser(new SeedCrystalSerialized());\r\n        this.add_randomiser(new SeedCrystalAbsoluteSerialized());\r\n\r\n        this.current_index = 0;\r\n        this.listeners = new Set();\r\n    }\r\n\r\n    listen_select(listener) {\r\n        this.listeners.add(listener);\r\n    }\r\n\r\n    notify(randomiser) {\r\n        for (let listener of this.listeners) {\r\n            listener(randomiser);\r\n        }\r\n    }\r\n\r\n    add_randomiser(randomiser) {\r\n        this.entries.push(randomiser);\r\n    }\r\n\r\n    update_randomiser(randomiser) {\r\n        let {type, params} = randomiser;\r\n        for (let i = 0; i < this.entries.length; i++) {\r\n            let other = this.entries[i];\r\n            if (other.type !== type) continue;\r\n\r\n            for (let key in params) {\r\n                other.params[key].value = params[key].value;\r\n            }\r\n            other.params = {...other.params};\r\n            this.current_index = i;\r\n            break;\r\n        }\r\n        this.notify(this.current_randomiser);\r\n    }\r\n\r\n    update_current(key, value) {\r\n        let param = this.current_randomiser.params[key];\r\n        param.value = value;\r\n        this.current_randomiser.params = {...this.current_randomiser.params}; // force update react\r\n    }\r\n\r\n    select(index) {\r\n        this.current_index = index;\r\n        this.notify(this.current_randomiser);\r\n    }\r\n\r\n    get current_randomiser() {\r\n        return this.entries[this.current_index];\r\n    } \r\n}","export class Observable {\r\n    constructor(value) {\r\n        this._value = value;\r\n        this.listeners = new Set();\r\n    }\r\n\r\n    listen(listener) {\r\n        return this.listeners.add(listener);\r\n    }\r\n\r\n    unlisten(listener) {\r\n        return this.listeners.delete(listener);\r\n    }\r\n\r\n    notify() {\r\n        for (let listener of this.listeners) {\r\n            listener(this);\r\n        }\r\n    }\r\n\r\n    get value() {\r\n        return this._value;\r\n    }\r\n\r\n    set value(value) {\r\n        this._value = value;\r\n        this.notify();\r\n    }\r\n}","import { Camera } from './Camera';\r\nimport { CellularAutomaton3D } from '../simulation/CellularAutomaton3D';\r\nimport { vec3 } from 'gl-matrix';\r\n\r\nimport { SimulationRenderer } from './rendering/SimulationRenderer';\r\nimport { Border } from './rendering/Border';\r\nimport { ShaderManager } from './rendering/ShaderManager';\r\nimport { EntryBrowser } from './entry_browser/EntryBrowser';\r\nimport { Statistics } from './Statistics';\r\nimport { RandomiserManager } from './RandomiserManager';\r\nimport { Toggle, Color } from '../ui/util/AdjustableValues';\r\nimport { Observable } from './Observable';\r\n\r\n\r\nexport class App {\r\n  constructor(gl, store) {\r\n    this.gl = gl;\r\n    this.store = store;\r\n\r\n    gl.enable(gl.DEPTH_TEST);\r\n    gl.enable(gl.BLEND);\r\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\r\n\r\n    this.show_border = new Toggle(true, \"Show an outlining border\");\r\n    this.show_render = new Toggle(true, \"Show the grid of cells (Disable if you want to see result later)\");\r\n    this.background_colour = new Color([255,255,255], \"Background Colour\");\r\n\r\n    let x = 100;\r\n    this.size = new Observable(vec3.fromValues(x, x, x));\r\n    this.camera = new Camera(this.size);\r\n\r\n    this.shader_manager = new ShaderManager(gl, this.size, this.camera);\r\n    this.randomiser_manager = new RandomiserManager();\r\n    this.entry_browser = new EntryBrowser();\r\n    this.stats = new Statistics(this.store);\r\n\r\n    this.sim = new CellularAutomaton3D(this.size, this.stats);\r\n    this.sim_renderer = new SimulationRenderer(gl, this.size, this.sim, this.shader_manager, this.stats);\r\n    this.border = new Border(gl, this.size, this.camera);\r\n\r\n    // everytime randomiser is changed, we update randomiser\r\n    this.randomiser_manager.listen_select((randomiser) => {\r\n      this.sim.set_randomiser(randomiser.to_json());\r\n    });\r\n\r\n    // when changing entries, we have a new randomiser and rule\r\n    this.entry_browser.listen_select((entry) => {\r\n      let randomiser = entry.randomiser;\r\n      let rule = entry.rule;\r\n      if (randomiser) {\r\n        this.randomiser_manager.update_randomiser(randomiser);\r\n      }\r\n      if (rule) {\r\n        this.sim.set_rule(rule.to_json());\r\n        this.sim_renderer.max_neighbours = rule.neighbour.max;\r\n      }\r\n    });\r\n\r\n    this.size.notify();\r\n\r\n    // select amoeba with layer colouring\r\n    this.entry_browser.select('Default', 0);\r\n    this.shader_manager.update_params({colouring: 0});\r\n    this.randomise();\r\n  }\r\n\r\n  randomise() {\r\n    let randomiser = this.randomiser_manager.current_randomiser;\r\n    this.sim.set_randomiser(randomiser.to_json());\r\n    this.sim.randomise();\r\n  }\r\n\r\n  set_size(size) {\r\n    let [xi, yi, zi] = this.size.value;\r\n    let [xf, yf, zf] = size;\r\n    if (xi !== xf || yi !== yf || zi !== zf) {\r\n      this.size.value = size;\r\n    }\r\n  }\r\n\r\n  // try render each frame\r\n  run() {\r\n    requestAnimationFrame(this.loop.bind(this));\r\n  }\r\n\r\n  loop() {\r\n    this.on_update();\r\n    this.on_render();\r\n    requestAnimationFrame(this.loop.bind(this));\r\n  }\r\n\r\n  // when resizing the canvas element, we need to update opengl viewport\r\n  resize() {\r\n    let gl = this.gl;\r\n    let canvas = gl.canvas;\r\n\r\n    let width = canvas.clientWidth;\r\n    let height = canvas.clientHeight;\r\n\r\n    if (width === canvas.width && height === canvas.height)\r\n      return;\r\n\r\n    canvas.width = width;\r\n    canvas.height = height;\r\n    gl.viewport(0, 0, width, height);\r\n    this.camera.aspect_ratio = width/height;\r\n  }\r\n\r\n  on_update() {\r\n    this.camera.update();\r\n  }\r\n    \r\n  on_render() {\r\n    let gl = this.gl;\r\n    this.resize();\r\n    \r\n    {\r\n      let c = this.background_colour.value;\r\n      gl.clearColor(c[0]/255, c[1]/255, c[2]/255, 1);\r\n      gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n    }\r\n\r\n    if (this.show_border.value) {\r\n      this.border.on_render();\r\n    }\r\n    if (this.show_render.value) {\r\n      this.sim_renderer.on_render();\r\n    }\r\n  }\r\n}\r\n\r\n\r\n","import { vec2 } from 'gl-matrix';\r\n\r\nexport class MouseController {\r\n  constructor(camera) {\r\n    this.camera = camera;\r\n    this.listeners = {\r\n      onMouseDown: ev => this.on_mouse_down(ev),\r\n      onMouseUp: ev => this.on_mouse_up(ev),\r\n      onMouseMove: ev => this.on_mouse_move(ev),\r\n      onWheel: ev => this.on_wheel(ev)\r\n    };\r\n\r\n    this.rotating = false;\r\n    this.zooming = false;\r\n\r\n    this.mouse_start_pos = vec2.create(); \r\n\r\n  }\r\n\r\n  on_mouse_down(ev) {\r\n    this.rotating = true;\r\n    this.mouse_start_pos[0] = ev.clientX;\r\n    this.mouse_start_pos[1] = ev.clientY;\r\n  }\r\n\r\n  on_mouse_up(ev) {\r\n    this.rotating = false;\r\n  }\r\n\r\n  on_mouse_move(ev) {\r\n    if (!this.rotating || !this.mouse_start_pos) return;\r\n    let factor = 5/1000;\r\n    let curr_pos = vec2.fromValues(ev.clientX, ev.clientY);\r\n    let delta = vec2.create();\r\n    vec2.sub(delta, this.mouse_start_pos, curr_pos);\r\n    vec2.scale(delta, delta, factor);\r\n\r\n    this.camera.rotate(delta[0], delta[1]);\r\n    \r\n    this.mouse_start_pos = curr_pos;\r\n  }\r\n\r\n  on_wheel(ev) {\r\n    let delta_zoom = ev.deltaY * 0.001;\r\n    this.camera.zoom(delta_zoom);\r\n    // ev.stopPropagation();\r\n    // ev.preventDefault();\r\n    // find a way to stop scrolling\r\n  }\r\n}","import { vec2 } from 'gl-matrix';\r\n\r\nexport class TouchScreenController {\r\n  constructor(camera) {\r\n    this.camera = camera;\r\n\r\n    this.listeners = {\r\n      onTouchStart: ev => this.on_touch_start(ev), \r\n      onTouchMove: ev => this.on_touch_move(ev),\r\n      onTouchEnd: ev => this.on_touch_end(ev),\r\n    };\r\n\r\n    this.rotating = false;\r\n    this.zooming = false;\r\n\r\n    this.total_touches = 0;\r\n    this.touch_start_pos = vec2.create();\r\n    this.touch_zoom_distance = 0;\r\n    this.touch_list = [];\r\n  }\r\n\r\n  on_touch_start(ev) {\r\n    let touches = ev.touches;\r\n    this.touch_list.push(...touches);\r\n    this.total_touches += touches.length;\r\n    if (this.total_touches === 1) {\r\n      this.rotating = true;\r\n      this.zooming = false;\r\n      let touch = this.touch_list[this.touch_list.length-1];\r\n      this.touch_start_pos = vec2.fromValues(touch.clientX, touch.clientY);\r\n    } else if (this.total_touches >= 2) {\r\n      this.zooming = true;\r\n      this.rotating = false;\r\n      let zoom_touches = this.touch_list.slice(this.touch_list.length-2, this.touch_list.length);\r\n      this.touch_zoom_distance = this.calculate_touch_distance(...zoom_touches);\r\n    }\r\n  }\r\n\r\n  on_touch_end(ev) {\r\n    this.rotating = false;\r\n    this.zooming = false;\r\n    this.touch_list = [];\r\n    this.total_touches = 0;\r\n    // this.touch_list.pop();\r\n    // this.total_touches -= 1;\r\n    if (this.total_touches < 2) {\r\n      this.zooming = false;\r\n    } \r\n    if (this.total_touches < 1) {\r\n      this.rotating = false;\r\n    }\r\n  }\r\n\r\n  on_touch_move(ev) {\r\n    if (!this.rotating && !this.zooming) return;\r\n    if (this.rotating) {\r\n      this.on_touch_rotate(ev);\r\n    } else if (this.zooming) {\r\n      this.on_touch_zoom(ev);\r\n    }\r\n  }\r\n\r\n  on_touch_rotate(ev) {\r\n    let touches = ev.touches;\r\n    if (touches.length < 1) return;\r\n\r\n    let touch = ev.touches[0];\r\n    let factor = 5/1000;\r\n    let curr_pos = vec2.fromValues(touch.clientX, touch.clientY);\r\n    let delta = vec2.create();\r\n    vec2.sub(delta, this.touch_start_pos, curr_pos);\r\n    vec2.scale(delta, delta, factor);\r\n\r\n    this.camera.rotate(delta[0], delta[1]);\r\n    \r\n    this.touch_start_pos = curr_pos;\r\n  }\r\n\r\n  on_touch_zoom(ev) {\r\n    let touches = ev.touches;\r\n    let distance = this.touch_zoom_distance;\r\n    if (touches.length >= 2) {\r\n      distance = this.calculate_touch_distance(touches[0], touches[1]);\r\n    } else {\r\n      // find nearest\r\n      let touch = touches[0];\r\n      let touch_a = this.touch_list[this.touch_list.length-2];\r\n      let touch_b = this.touch_list[this.touch_list.length-1];\r\n      let dist_a = this.calculate_touch_distance(touch_a, touch);\r\n      let dist_b = this.calculate_touch_distance(touch_b, touch);\r\n\r\n      // update touch a\r\n      if (dist_a < dist_b) {\r\n        this.touch_list[this.touch_list.length-2] = touch;\r\n        distance = dist_b;\r\n      } else {\r\n        this.touch_list[this.touch_list.length-1] = touch;\r\n        distance = dist_a;\r\n      }\r\n      \r\n    }\r\n    let scale = distance / this.touch_zoom_distance;\r\n    this.touch_zoom_distance = distance;\r\n    this.camera.zoom(1.0-scale);\r\n  }\r\n\r\n  calculate_touch_distance(first, second) {\r\n    let pos_start = vec2.fromValues(first.clientX, first.clientY);\r\n    let pos_end = vec2.fromValues(second.clientX, second.clientY);\r\n    let delta = vec2.create();\r\n    vec2.sub(delta, pos_start, pos_end);\r\n    let length = vec2.length(delta);\r\n    return length;\r\n  }\r\n}","import React from 'react';\r\nimport { App } from '../../../app/App';\r\n\r\nimport { MouseController } from './MouseController';\r\nimport { TouchScreenController } from './TouchScreenController';\r\n\r\nimport { create_reducer } from '../../reducers';\r\n\r\nimport \"./Canvas.css\";\r\nimport { set_focused } from '../../actions';\r\n\r\nexport class Canvas extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.mouse_controller = new MouseController();\r\n    this.touch_controller = new TouchScreenController();\r\n  }\r\n\r\n  componentDidMount() {\r\n    let canvas = this.props.canvas.current;\r\n    const gl = canvas.getContext('webgl2');\r\n    if (!gl) {\r\n      throw new Error('WebGL not supported');\r\n    }\r\n    let app = this.create_app(gl);\r\n    let camera = app.camera;\r\n    this.mouse_controller.camera = camera;\r\n    this.touch_controller.camera = camera;\r\n    this.focus_timeout = this.create_focus_timeout();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearTimeout(this.focus_timeout);\r\n  }\r\n\r\n  create_focus_timeout(delay=3000) {\r\n    let id = setTimeout(() => this.change_focus(false), delay);\r\n    return id;\r\n  }\r\n\r\n  // mouse moves, update focus\r\n  on_mouse_move() {\r\n    clearTimeout(this.focus_timeout);\r\n    this.focus_timeout = this.create_focus_timeout();\r\n    this.change_focus(true);\r\n  }\r\n\r\n  change_focus(focused) {\r\n    let store = this.props.store;\r\n    let original = store.getState().gui.focused;\r\n    if (original === focused) {\r\n      return;\r\n    }\r\n    store.dispatch(set_focused(focused));\r\n  }\r\n\r\n  create_app(gl) {\r\n    let store = this.props.store;\r\n    let app = store.getState().app;\r\n    if (app) {\r\n      return app;\r\n    }\r\n\r\n    app = new App(gl, store);\r\n    let reducer = create_reducer(app);\r\n    store.replaceReducer(reducer);\r\n    app.run();\r\n    return app;\r\n  }\r\n\r\n  render() {\r\n    const listener = ev => this.on_mouse_move();\r\n    const hooks = ['onMouseMove', 'onMouseDown', 'onMouseUp', 'onTouchMove', 'onTouchStart', 'onTouchEnd'];\r\n    let listeners = {};\r\n    for (let hook of hooks) {\r\n      listeners[hook] = listener;\r\n    }\r\n    \r\n    return (\r\n      <div className='w-100 h-100 pb-2' {...listeners}>\r\n        <canvas \r\n          className=\"w-100 h-100\" ref={this.props.canvas} \r\n          {...this.mouse_controller.listeners} {...this.touch_controller.listeners}></canvas>\r\n      </div>\r\n    );\r\n  }\r\n}","import { combineReducers } from 'redux';\r\nimport { app_reducer } from './app';\r\nimport { entry_reducer } from './entry_manager';\r\nimport { shader_reducer } from './shader_manager';\r\nimport { stats_reducer } from './statistics';\r\nimport { randomiser_reducer } from './randomiser_manager';\r\nimport { gui_reducer } from './gui';\r\n\r\nexport function create_reducer(app) {\r\n    let reducers = combineReducers({\r\n      app: app_reducer(app),\r\n      entry_browser: entry_reducer(app.entry_browser),\r\n      shader_manager: shader_reducer(app.shader_manager),\r\n      stats: stats_reducer(app.stats),\r\n      randomiser: randomiser_reducer(app.randomiser_manager),\r\n      gui: gui_reducer(),\r\n    });\r\n\r\n    return reducers;\r\n}\r\n\r\nexport function create_preinit_reducer() {\r\n    return combineReducers({\r\n        gui: gui_reducer()\r\n    })\r\n}\r\n","export function randomiser_reducer(randomiser_manager) {\r\n    const reducer = (manager=randomiser_manager, action) => {\r\n        switch (action.type) {\r\n            case 'randomiser.select':\r\n                manager.select(action.value);\r\n                break;\r\n            case 'randomiser.update':\r\n                manager.update_current(action.name, action.value);\r\n                break;\r\n            default: \r\n                break;\r\n        }\r\n        return manager;\r\n    }\r\n    return reducer;\r\n}","export function stats_reducer(init_stats) {\r\n    const reducer = (stats=init_stats, action) => {\r\n        switch (action.type) {\r\n            case 'stats.update':\r\n                return action.value;\r\n            default: \r\n                break;\r\n        }\r\n\r\n        return stats;\r\n    }\r\n\r\n    return reducer;\r\n}","export function shader_reducer(shader_manager) {\r\n    const reducer = (manager=shader_manager, action) => {\r\n        switch (action.type) {\r\n            case 'shader.select_renderer':\r\n                manager.select_renderer(action.value);\r\n                break;\r\n            case 'shader.update_params':\r\n                manager.update_params(action.value);\r\n                break;\r\n            default: \r\n                break;\r\n        }\r\n\r\n        return manager;\r\n    }\r\n\r\n    return reducer;\r\n}","export function entry_reducer(entry_browser) {\r\n    const reducer = (browser=entry_browser, action) => {\r\n        switch (action.type) {\r\n            case 'entry.refresh':\r\n                return browser;\r\n            case 'entry.select':\r\n                {\r\n                    let {key, index} = action.value;\r\n                    browser.select(key, index);\r\n                }\r\n                break;\r\n            default: \r\n                break;\r\n        }\r\n\r\n        return browser;\r\n    } \r\n\r\n    return reducer;\r\n}","export function app_reducer(init_app) {\r\n    const reducer = (app=init_app, action) => {\r\n        switch (action.type) {\r\n            case 'step': app.sim.step(); break;\r\n            case 'stop': app.sim.stop(); break;\r\n            case 'start': app.sim.start(); break;\r\n            case 'toggle': app.sim.toggle(); break;\r\n            case 'clear': app.sim.clear(); break;\r\n            case 'randomise': app.randomise(); break;\r\n            case 'app.set_size':\r\n                app.set_size(action.value);\r\n                break;\r\n            case 'app.show_border':\r\n                app.show_border.value = action.value;\r\n                break;\r\n            case 'app.show_render':\r\n                app.show_render.value = action.value;\r\n                break;\r\n            case 'app.set_background_colour':\r\n                app.background_colour.value = action.value;\r\n                break;\r\n            case 'app.set_border_colour':\r\n                app.border.colour.value = action.value;\r\n                break;\r\n            default: \r\n                break;\r\n            }\r\n\r\n        return app;\r\n    }\r\n\r\n    return reducer;\r\n} \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { set_fullscreen as action_fullscreen } from '../../actions';\r\n\r\nexport function FullScreenButton() {\r\n  const dispatch = useDispatch();\r\n  const fullscreen = useSelector(state => state.gui.fullscreen);\r\n\r\n  const font = !fullscreen ? 'arrows-alt' : 'compress-arrows-alt';\r\n\r\n  function set_fullscreen(is_fullscreen) {\r\n    const e = document.documentElement;\r\n    const d = document;\r\n    const request_fullscreen = e.requestFullscreen || e.mozRequestFullScreen || e.webkitRequestFullScreen || e.msRequestFullscreen;\r\n    const cancel_fullscreen = d.exitFullscreen || d.mozCancelFullScreen || d.webkitCancelFullScreen || d.msExitFullscreen;\r\n    const document_fullscreen = (d.fullscreenElement && d.fullscreenElement !== undefined) || d.mozFullscreen || d.webkitIsFullScreen; \r\n    if (!document_fullscreen) {\r\n      request_fullscreen.bind(e)();\r\n      dispatch(action_fullscreen(true));\r\n    } else {\r\n      cancel_fullscreen.bind(d)();\r\n      dispatch(action_fullscreen(false));\r\n    }\r\n  }\r\n\r\n  const onClick = () => {\r\n    let is_fullscreen = !fullscreen;\r\n    set_fullscreen(is_fullscreen);\r\n  };\r\n\r\n  return (\r\n    <button className={`btn btn-secondary`} onClick={onClick}>\r\n      <i className={`fas fa-${font} fa-sm`}></i>\r\n    </button>\r\n  );\r\n}","import React from 'react';\r\nimport { Controls } from '../Controls';\r\nimport { useSelector, useStore } from 'react-redux';\r\nimport { Canvas } from './Canvas';\r\nimport { FullScreenButton } from './FullScreenButton';\r\nimport \"./SimulationView.css\";\r\n\r\nexport function SimulationView(props) {\r\n  const store = useStore();\r\n  const app = useSelector(store => store.app);\r\n  const fullscreen = useSelector(store => store.gui.fullscreen);\r\n  const focused = useSelector(store => store.gui.focused);\r\n  const background_colour = useSelector(store => store.app && store.app.background_colour.value)\r\n\r\n  let float_controls = (fullscreen && !focused) ? 'fade' : '';\r\n\r\n  function render_float_controls() {\r\n    return (\r\n      <div className={float_controls} style={{zIndex:1, position:'absolute', bottom:'1.5rem', alignSelf:'center'}}>\r\n        <div>\r\n          <Controls></Controls>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function render_fullscreen_button() {\r\n    return (\r\n      <div className={float_controls} style={{zIndex:2, position:'absolute', top:'1.5rem', right:'1.5rem'}}>\r\n        <FullScreenButton></FullScreenButton>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function render_links() {\r\n    return (\r\n      <div className={float_controls} style={{zIndex:3, position:'absolute', top:'1.5rem', left:'1.5rem'}}>\r\n        <a className=\"btn btn-dark btn-circle btn-md\" \r\n          href=\"https://github.com/FiendChain/3D-Cellular-Automata\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          data-toggle=\"tooltip\"\r\n          data-placement=\"left\"\r\n          title=\"Github Repository\">\r\n          <i className=\"fab fa-github\"></i>\r\n        </a>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const [r,g,b] = background_colour || [255, 255, 255]; \r\n  const rgb = `rgb(${r},${g},${b})`;\r\n\r\n  return (\r\n    <div className=\"card sim-view shadow h-100\" style={{border: `1px solid ${rgb}`}}>\r\n      <Canvas store={store} canvas={props.canvas}></Canvas>\r\n      {app ? render_float_controls() : <div></div>}\r\n      {render_fullscreen_button()}\r\n      {render_links()}\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport \"./Entry.css\";\r\n\r\nexport function EntryEditor(props) {\r\n  const [name, set_name] = useState(props.name || '');\r\n  const [ca_string, set_ca_string] = useState(props.ca_string || '');\r\n  let [show_actions, set_show_actions] = useState(false);\r\n  const onSubmit = props.onSubmit;\r\n  const onExit = props.onExit;\r\n  const errors = props.errors;\r\n\r\n  function on_key_down(ev) {\r\n    if(ev.keyCode === 13) {\r\n      on_submit(ev);\r\n    }\r\n  }\r\n\r\n  function on_submit(ev) {\r\n    if (ev) ev.preventDefault();\r\n    onSubmit && onSubmit(name, ca_string);\r\n  }\r\n\r\n  function on_exit() {\r\n    onExit && onExit();\r\n  }\r\n \r\n  function render_errors(str) {\r\n    let lines = String(str).split('\\n');\r\n    return (\r\n      <div className=\"invalid-feedback\">\r\n        {lines.map((line, i) => <div key={i}>{line}</div>)}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const err_fmt = errors ? 'is-invalid' : '';\r\n\r\n  const tooltip = (\r\n    \"[Remain Alive]/[Become Alive]/[Total States]/[Neighbourhood]\\n\"+\r\n    \"[Remain Alive]: Range where a cell stays alive. E.g. 0-3,9\\n\"+\r\n    \"[Become Alive]: Range where a cell goes from dead to alive. E.g. 0-3,9\\n\"+\r\n    \"[Total States]: Number of states a cell goes through when dying. E.g. 10\\n\"+\r\n    \"[Neighbourhood]: Type of neighbour counting. 'M' counts all 26, and 'VN' counts 6\"\r\n  )\r\n\r\n  const form = (\r\n    <form onSubmit={on_submit} onKeyDown={on_key_down} className=\"w-75\">\r\n      <div className=\"form-group row mb-0 mt-0\">\r\n        <label className=\"col-sm-3 col-form-label py-0\">Name:</label>\r\n        <div className=\"col-sm py-0\">\r\n          <input type=\"text\" className=\"form-control form-control-sm w-100 py-0\" value={name} onChange={ev => set_name(ev.target.value)}/>\r\n        </div>\r\n      </div>\r\n      <div className=\"form-group row mt-0 mb-0\">\r\n        <div className=\"col-sm-3 col-form-label py-0\">\r\n        <label className=\"mr-1\">Rule:</label>\r\n        <span className=\"\" data-toggle=\"tooltip\" data-placement=\"left\" data-html={true} title={tooltip}>\r\n          <i className=\"fas fa-question-circle\"></i>\r\n        </span>\r\n\r\n        </div>\r\n        <div className=\"col-sm py-0\">\r\n          <input type=\"text\" className={`form-control form-control-sm w-100 py-0 ${err_fmt}`} id=\"ca_string\" value={ca_string} onChange={ev => set_ca_string(ev.target.value)}/>\r\n          {errors && render_errors(errors)}\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n\r\n  const actions = (\r\n    <div \r\n      className={`actions ${!show_actions && 'fade'}`} \r\n      onMouseOver={() => set_show_actions(true)}>\r\n      <button className=\"btn btn-circle btn-sm btn-warning\"  onClick={on_exit}><i className=\"fas fa-ban\"></i></button>\r\n      <button className=\"btn btn-circle btn-sm btn-success\"  onClick={on_submit}><i className=\"fas fa-check-circle\"></i></button>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div \r\n      onMouseEnter={() => set_show_actions(true)}\r\n      onMouseLeave={() => set_show_actions(false)}>\r\n      {form}\r\n      {actions}\r\n    </div>\r\n  )\r\n}","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport \"./Entry.css\";\r\nimport { select_entry, delete_entry } from '../../actions';\r\n\r\n/**\r\n * Render entry with controls for editing, deleting and copying \r\n */\r\nexport function EntryView(props) {\r\n  let dispatch = useDispatch();\r\n  let [show_actions, set_show_actions] = useState(false);\r\n  let [copy_success, set_copy_success] = useState(false);\r\n\r\n  const {browser, index} = props;\r\n  const {name, ca_string} = props;\r\n  const selected = props.selected;\r\n  const {del, copy, edit} = props.actions;\r\n  const onEdit = props.onEdit;\r\n\r\n\r\n  const on_select = ev => {\r\n    dispatch(select_entry(browser, index));\r\n    ev.preventDefault();\r\n  }\r\n  // base actions\r\n  const on_delete = ev => {\r\n    dispatch(delete_entry(browser, index));\r\n    ev.preventDefault();\r\n  }\r\n\r\n  const on_copy = ev => {\r\n    navigator.permissions.query({name: 'clipboard-write'}).then(res => {\r\n      if (res.state === 'granted' || res.state === 'prompt') {\r\n        navigator.clipboard.writeText(ca_string)\r\n          .then(() => set_copy_success(true));\r\n      }\r\n    });\r\n    ev.preventDefault();\r\n  }\r\n\r\n  const on_edit = ev => {\r\n    ev.preventDefault();\r\n    onEdit && onEdit();\r\n  }\r\n\r\n  const render_copy_tooltip = () => (\r\n    <div className={`tooltip copy-text ${copy_success ? 'show' : 'fade'}`} role=\"tooltip\">\r\n      <div className=\"tooltip-inner\">Copied {name}!</div>\r\n    </div>\r\n  );\r\n\r\n  const render_copy_button = () => ( \r\n    <div className=\"d-inline\">\r\n      <button className=\"btn btn-circle btn-sm btn-light\"  \r\n          onClick={on_copy} onMouseLeave={() => set_copy_success(false)}>\r\n        <span className=\"icon text-gray-600\">\r\n          <i className=\"fas fa-copy\"></i>\r\n        </span>\r\n      </button>\r\n      {render_copy_tooltip()}\r\n    </div>\r\n  );\r\n\r\n\r\n  const render_actions = () => (\r\n    <div className={`actions ${!show_actions && 'fade'}`} onMouseOver={() => set_show_actions(true)}>\r\n      {copy && render_copy_button()}\r\n      {del && <button className=\"btn btn-circle btn-sm btn-danger\"  onClick={on_delete}><i className=\"fas fa-trash\"></i></button>}\r\n      {edit && <button className=\"btn btn-circle btn-sm btn-primary\"  onClick={on_edit}><i className=\"fas fa-edit\"></i></button>}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <li className={`list-group-item ${selected ? 'active' : ''}`}>\r\n      <div \r\n        onMouseEnter={() => set_show_actions(true)}\r\n        onMouseLeave={() => set_show_actions(false)}>\r\n        <div onClick={on_select}>\r\n          <div>Name: {name}</div>\r\n          <div>Rule: {ca_string}</div>\r\n        </div>\r\n        {render_actions()}\r\n      </div>\r\n    </li>\r\n  );\r\n}","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport \"./Entry.css\";\r\nimport { edit_entry } from '../../actions';\r\nimport { EntryEditor } from './EntryEditor';\r\nimport { EntryView } from './EntryView';\r\n\r\n/**\r\n * Swap between a basic view and editable form \r\n */\r\nexport function Entry(props) {\r\n  const dispatch = useDispatch();\r\n\r\n  const entry = props.entry;\r\n  const { browser, index } = props;\r\n\r\n  // for editing\r\n  let [editing, set_editing] = useState(false);\r\n  let [errors, set_errors] = useState(undefined);\r\n\r\n  let [name, set_name] = useState(entry.name);\r\n  let [ca_string, set_ca_string] = useState(entry.description);\r\n\r\n  const on_submit = (name, ca_string) => {\r\n    dispatch(edit_entry(browser, index, name, ca_string, err => {\r\n      set_errors(err);\r\n      err ? set_editing(true) : set_editing(false);\r\n      if (!err) {\r\n        set_name(name);\r\n        set_ca_string(ca_string);\r\n      }\r\n    }))\r\n  }\r\n\r\n  const on_exit = () => {\r\n    set_editing(false);\r\n    set_errors(false);\r\n  }\r\n\r\n  const render_editable_body = () => (\r\n    <li className=\"list-group-item\">\r\n      <EntryEditor name={name} ca_string={ca_string} onSubmit={on_submit} onExit={on_exit} errors={errors}></EntryEditor>\r\n    </li>\r\n  )\r\n\r\n  const render_normal_body = () => (\r\n    <EntryView\r\n      browser={browser} index={index}\r\n      name={name} ca_string={ca_string}\r\n      actions={props.actions}\r\n      selected={props.selected}\r\n      onEdit={() => set_editing(true)}></EntryView>\r\n  );\r\n\r\n  return editing ? render_editable_body() : render_normal_body();\r\n}","import React, { useState } from 'react';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { EntryEditor } from './EntryEditor';\r\nimport { create_entry } from '../../actions';\r\n\r\nexport function AddButton() {\r\n  let dispatch = useDispatch();\r\n  let [editing, set_editing] = useState(false);\r\n  let [errors, set_errors] = useState(false);\r\n\r\n  const render_add_button = () => (\r\n    <li className=\"list-group-item\" style={{textAlign:'center'}}>\r\n      <button className=\"btn btn-circle btn-md btn-secondary shadow\" onClick={() => set_editing(true)}>\r\n        <span className=\"icon text-white-600 m-0\">\r\n          <i className=\"fas fa-plus\"></i>\r\n        </span>\r\n      </button>\r\n    </li>\r\n  );\r\n\r\n  const on_submit = (name, ca_string) => {\r\n    dispatch(create_entry(name, ca_string, err => {\r\n      set_errors(err);\r\n      err ? set_editing(true) : set_editing(false);\r\n    }));\r\n  }\r\n\r\n  const on_exit = () => {\r\n    set_editing(false);\r\n    set_errors(false);\r\n  }\r\n\r\n  const render_form = () => (\r\n    <li className=\"list-group-item\">\r\n      <EntryEditor errors={errors} onSubmit={on_submit} onExit={on_exit}></EntryEditor>\r\n    </li>\r\n  );\r\n\r\n  return editing ? render_form() : render_add_button()\r\n}","import React, { useState } from 'react';\r\n\r\nimport { useSelector } from 'react-redux';\r\nimport { Entry } from './Entry';\r\nimport { AddButton } from './AddButton';\r\n\r\nexport function EntryBrowser() {\r\n  const selected_browser_key = useSelector(state => state.entry_browser.current_browser_key);\r\n  const selected_index = useSelector(state => state.entry_browser.selected_browser.current_index);\r\n\r\n  let [browser_key, set_browser_key] = useState(selected_browser_key);\r\n\r\n  const browsers = useSelector(state => state.entry_browser.browsers);\r\n  const entries = useSelector(state => state.entry_browser.get_entries(browser_key));\r\n\r\n  let is_user = (browser_key === 'User');\r\n\r\n  let browser_keys = [];\r\n  for (let key in browsers) {\r\n    browser_keys.push(key);\r\n  }\r\n\r\n  function render_rule_items() { \r\n    return entries.map((e, i) => {\r\n      let props = {\r\n        entry: e, \r\n        browser: browser_key, index: i,\r\n        actions: {del: is_user, copy: true, edit: is_user},\r\n        selected: i === selected_index && browser_key === selected_browser_key,\r\n      }\r\n      let index = e.id === undefined ? i : e.id;\r\n      return <Entry {...props} key={`${browser_key}_${index}`}></Entry>\r\n    });\r\n  }\r\n\r\n  const render_controls = (\r\n    <div className=\"d-flex flex-row my-0 py-0\">\r\n      <div className=\"btn-group py-0 my-0\">\r\n        {browser_keys.map((e, i) => { \r\n          let selected = e === browser_key;\r\n          return (\r\n            <button \r\n              className={`btn btn-sm ${selected ? 'btn-primary' : 'btn-outline-secondary'}`} \r\n              key={i} onClick={() => set_browser_key(e)}>{e}</button>\r\n          )\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"card shadow mb-2\">\r\n      <div className=\"card-header py-2 d-flex flex-row align-items-center justify-content-between\">\r\n        <h6 className=\"m-0 font-weight-bold text-primary\">Rules</h6>\r\n        {render_controls}\r\n      </div>\r\n      <div className=\"collapse show\" id=\"collapseRulesBrowser\">\r\n        <ul className=\"list-group\">\r\n          {render_rule_items()}\r\n        </ul>\r\n        {is_user && <AddButton></AddButton>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport \"./Help.css\";\r\n\r\nexport function Help(props) {\r\n  return (\r\n    <span className=\"help-icon\" data-toggle=\"tooltip\" data-placement=\"left\" data-html={true} title={props.text}>\r\n      <i className=\"fas fa-question-circle\"></i>\r\n    </span>\r\n  )\r\n}","import React from 'react';\r\nimport { useState } from 'react';\r\nimport \"./ColorPicker.css\";\r\nimport { ChromePicker } from 'react-color';\r\n\r\nexport function ColorPicker({color, valueChanged}) {\r\n    let [show_picker, set_show_picker] = useState(false);\r\n    let rgba = {r: color[0], g: color[1], b: color[2], a:1};\r\n\r\n    const on_click = () => set_show_picker(!show_picker);\r\n    const on_change = colour => {\r\n        let rgb = colour.rgb;\r\n        valueChanged([rgb.r, rgb.g, rgb.b]);\r\n    } \r\n\r\n    const on_close = () => set_show_picker(false);\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"swatch\" onClick={on_click}>\r\n                <div className=\"color-display\" style={{background: `rgba(${rgba.r}, ${rgba.g}, ${rgba.b}, ${rgba.a})`}}></div>\r\n            </div>\r\n            {show_picker && \r\n            <div className=\"popover\">\r\n                <div className=\"cover\" onClick={on_close}/>\r\n                <ChromePicker color={rgba} onChange={on_change} disableAlpha={true}></ChromePicker>\r\n            </div>}\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { Help } from './Help';\r\nimport { ColorPicker } from './ColorPicker';\r\n\r\nexport function RenderAdjustableValue(adjustable, key, name, valueChanged) {\r\n  let type = adjustable.type;\r\n  switch (type) {\r\n    case 'slider':\r\n      return SliderView(adjustable, key, name, valueChanged);\r\n    case 'toggle':\r\n      return ToggleView(adjustable, key, name, valueChanged);\r\n    case 'dropdown':\r\n      return DropdownView(adjustable, key, name, valueChanged);\r\n    case 'color':\r\n      return ColorView(adjustable, key, name, valueChanged);\r\n    default:\r\n      return;\r\n  }\r\n}\r\n\r\nfunction SliderView(slider, key, name, valueChanged) {\r\n  let step = (slider.max-slider.min)/100.0;\r\n//   return (\r\n//     <div className='form-inline' key={key}>\r\n//       <div className=\"row w-100\">\r\n//         <div className=\"col-sm\">{name}: {slider.value.toFixed(2)}</div>\r\n//         {slider.help && <div className=\"col-sm-1 text-right\"><Help text={slider.help}></Help></div>}\r\n//       </div>\r\n//     </div>\r\n//  );\r\n\r\n return (\r\n  <div className=\"row w-100\" key={key}>\r\n    {/* <div className=\"col-sm-3\">{name}</div>\r\n    <div className=\"col-sm-2\"></div> */}\r\n\r\n    <div className=\"col-sm-5\">{name}: {slider.value.toFixed(2)}</div>\r\n    <div className=\"col-sm d-flex\">\r\n      <input \r\n        className='form-control-range my-auto' type='range' \r\n        min={slider.min} max={slider.max} value={slider.value} step={step}\r\n        onChange={ev => valueChanged(Number(ev.target.value))}></input> \r\n    </div>\r\n    {slider.help && <div className=\"col-sm-1 text-right\"><Help text={slider.help}></Help></div>}\r\n  </div>\r\n );\r\n}\r\n\r\nfunction ToggleView(toggle, key, name, valueChanged) {\r\n  return (\r\n    <div className=\"row w-100\" key={key}>\r\n      <div className=\"col-sm-5\">\r\n        <label className='form-check-label'>{name}</label>\r\n      </div>\r\n      <div className=\"col-sm\">\r\n          <input \r\n            type='checkbox' className='form-check-input ml-0'\r\n            checked={toggle.value}\r\n            onChange={ev => valueChanged(ev.target.checked)}></input>\r\n      </div>\r\n      {toggle.help && <div className=\"col-sm-1 text-right\"><Help text={toggle.help}></Help></div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction DropdownView(dropdown, key, name, valueChanged) {\r\n  let onChange = ev => valueChanged(Number(ev.target.value));\r\n  return (\r\n    <div className=\"row w-100\" key={key}>\r\n      <div className=\"col-sm-5\"><label>{name} </label></div>\r\n      <div className=\"col-sm\">\r\n        <select className='custom-select custom-select-sm' value={dropdown.value} onChange={onChange}>\r\n          {dropdown.options.map((option, i) => (\r\n            <option value={i} key={`${name}_${key}_${i}`}>{option}</option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      {dropdown.help && <div className=\"col-sm-1 text-right\"><Help text={dropdown.help}></Help></div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ColorView(color, key, name, valueChange) {\r\n  return (\r\n    <div className=\"row w-100\" key={key}>\r\n      <div className=\"col-sm-5\"><label>{name}</label></div>\r\n      <div className=\"col-sm\">\r\n          <ColorPicker color={color.value} valueChanged={valueChange}></ColorPicker>\r\n      </div>\r\n      {color.help && <div className=\"col-sm-1 text-right\"><Help text={color.help}></Help></div>}\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { RenderAdjustableValue } from '../util/AdjustableValueViews';\r\n\r\nimport { show_border, show_render, set_background_colour, set_border_colour } from '../actions';\r\n\r\nexport function GraphicsControls() {\r\n  const dispatch = useDispatch();\r\n  const border_checkbox = useSelector(state => state.app.show_border);\r\n  const render_checkbox = useSelector(state => state.app.show_render);\r\n  const background_colour = useSelector(state => state.app.background_colour);\r\n  const border_colour = useSelector(state => state.app.border.colour);\r\n  // force redux to acknowledge when this is changed\r\n  let _ = useSelector(state => state.app.show_border.value);\r\n  _ = useSelector(state => state.app.show_render.value);\r\n  _ = useSelector(state => state.app.background_colour.value);\r\n  _ = useSelector(state => state.app.border.colour.value);\r\n\r\n  return (\r\n    <div>\r\n      {RenderAdjustableValue(border_checkbox, 0, 'Show Border', value => {\r\n        dispatch(show_border(value));\r\n      })}\r\n      {RenderAdjustableValue(border_colour, 1, 'Border Colour', value => {\r\n        dispatch(set_border_colour(value));\r\n      })}\r\n      {RenderAdjustableValue(render_checkbox, 2, 'Show Render', value => {\r\n        dispatch(show_render(value));\r\n      })}\r\n      {RenderAdjustableValue(background_colour, 3, 'Background Colour', value => {\r\n        dispatch(set_background_colour(value));\r\n      })}\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { RenderAdjustableValue } from '../util/AdjustableValueViews';\r\nimport { GraphicsControls } from './GraphicsControls';\r\nimport { update_shader_params, select_renderer } from '../actions';\r\n\r\nexport function ShaderMenu() {\r\n  const dispatch = useDispatch();\r\n  const renderer_type = useSelector(state => state.shader_manager.renderer_type);\r\n  const _ = useSelector(state => state.shader_manager.renderer_type.value);\r\n\r\n  const card_body = (\r\n    <div>\r\n      <div>\r\n        {RenderAdjustableValue(renderer_type, 0, 'Renderer', value => {\r\n          dispatch(select_renderer(value));\r\n        })}\r\n      </div>\r\n      <GraphicsControls></GraphicsControls>\r\n      <hr></hr>\r\n      <ShaderSettings></ShaderSettings>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"card shadow mb-2\">\r\n      <a href=\"#collapseGraphicsMenu\" className=\"card-header d-block\" data-toggle=\"collapse\" role=\"button\" aria-expanded=\"true\" aria-controls=\"collapseGraphicsMenu\">\r\n        <h6 className=\"m-0 font-weight-bold text-primary\">Graphics</h6>\r\n      </a>\r\n      <div className=\"collapse show\" id=\"collapseGraphicsMenu\">\r\n        <div className=\"card-body\">\r\n          {card_body}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ShaderSettings() {\r\n  const dispatch = useDispatch();\r\n  const params = useSelector(state => state.shader_manager.params);\r\n  const renderer_type = useSelector(state => state.shader_manager.renderer_type.value);\r\n\r\n  return (\r\n    <div>\r\n      {Object.entries(params).map(([name, param], index) => {\r\n        return RenderAdjustableValue(param, `${renderer_type}_${index}`, name, value => {\r\n          let data = {};\r\n          data[name] = value;\r\n          dispatch(update_shader_params(data)); \r\n        })\r\n      })}\r\n    </div>\r\n  );\r\n}","import React, { useState } from 'react';\r\nimport { vec3 } from 'gl-matrix';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { set_size } from '../actions';\r\n\r\nexport function SizeChanger() {\r\n  const dispatch = useDispatch();\r\n  const app_size = useSelector(state => state.app.size.value);\r\n  let [x, set_x] = useState(app_size[0]);\r\n  let [y, set_y] = useState(app_size[1]);\r\n  let [z, set_z] = useState(app_size[2]);\r\n\r\n  const max_size = 1000;\r\n  const min_size = 1;\r\n\r\n  function clamp(val) {\r\n    let clamped = Number(val);\r\n    clamped = Math.max(clamped, min_size);\r\n    clamped = Math.min(clamped, max_size);\r\n    return clamped;\r\n  }\r\n\r\n  function on_size_change(event) {\r\n    let X = clamp(x);\r\n    let Y = clamp(y);\r\n    let Z = clamp(z);\r\n    set_x(X);\r\n    set_y(Y);\r\n    set_z(Z);\r\n    let size = vec3.fromValues(X, Y, Z);\r\n    dispatch(set_size(size));\r\n    event.preventDefault();\r\n  }\r\n\r\n  const size_changer_form = (\r\n    <form onSubmit={(event) => on_size_change(event)}>\r\n      <div className=\"input-group mb-0\">\r\n        <input type=\"number\" value={x} max={max_size} min={min_size} onChange={ev => set_x(ev.target.value)}></input> \r\n        <input type=\"number\" value={y} max={max_size} min={min_size} onChange={ev => set_y(ev.target.value)}></input> \r\n        <input type=\"number\" value={z} max={max_size} min={min_size} onChange={ev => set_z(ev.target.value)}></input> \r\n        <div className=\"input-group-append\">\r\n          <button type=\"submit\" className='btn btn-primary btn-sm'>Apply</button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n\r\n  return (\r\n    <div className=\"card shadow mb-2\">\r\n      <a href=\"#collapseSizeChanger\" className=\"card-header d-block\" data-toggle=\"collapse\" aria-expanded=\"true\" aria-controls=\"collapseSizeChanger\">\r\n        <h6 className=\"m-0 font-weight-bold text-primary\">Size Controls</h6>\r\n      </a>\r\n      <div className=\"collapse show\" id=\"collapseSizeChanger\">\r\n        <div className=\"card-body\">\r\n          {size_changer_form}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nexport function Statistics() {\r\n  const completed_blocks = useSelector(state => state.stats.data.completed_blocks);\r\n  const total_blocks = useSelector(state => state.stats.data.total_blocks);\r\n  const frame_time = useSelector(state => state.stats.data.frame_time);\r\n  const total_steps = useSelector(state => state.stats.data.total_steps);\r\n  const texture_data_update = useSelector(state => state.stats.data.texture_data_update);\r\n  const texture_data_upload = useSelector(state => state.stats.data.texture_data_upload);\r\n  const draw_time = useSelector(state => state.stats.data.draw_time);\r\n\r\n  let progress = 0;\r\n  if (total_blocks > 0) {\r\n    progress = completed_blocks/total_blocks * 100;\r\n  }\r\n\r\n  const stats = (\r\n    <div>\r\n      <div className=\"row\">\r\n        <div className=\"col\">\r\n          <div>Total Steps: {total_steps}</div>\r\n          <div>Frame Time (ms): {frame_time.toFixed(2)}</div>\r\n          <div>Draw Time (ms): {draw_time.toFixed(2)}</div>\r\n        </div>\r\n        <div className=\"col\">\r\n          <div>Tex Update (ms): {texture_data_update.toFixed(2)}</div>\r\n          <div>Tex Upload (ms): {texture_data_upload.toFixed(2)}</div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row\">\r\n        <div className=\"col\">Progress: {completed_blocks}/{total_blocks} ({progress.toFixed(2)}%)</div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"card shadow\">\r\n      <a href=\"#collapseStatsMenu\" className=\"card-header d-block\" data-toggle=\"collapse\" role=\"button\" aria-expanded=\"true\" aria-controls=\"collapseStatsMenu\">\r\n        <h6 className=\"m-0 font-weight-bold text-primary\">Statistics</h6>\r\n      </a>\r\n      <div className=\"collapse show\" id=\"collapseStatsMenu\">\r\n        <div className=\"card-body\">\r\n          {stats}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { RenderAdjustableValue } from '../util/AdjustableValueViews';\r\nimport { update_randomiser, select_randomiser } from '../actions';\r\nimport { Help } from '../util/Help';\r\n\r\nexport function RandomiserMenu() {\r\n  const dispatch = useDispatch();\r\n  let current_index = useSelector(state => state.randomiser.current_index);\r\n  let entries = useSelector(state => state.randomiser.entries);\r\n\r\n  function on_select_randomiser(event) {\r\n    let index = event.target.value;\r\n    dispatch(select_randomiser(index));\r\n  }\r\n\r\n  const randomiser_options = entries.map((e, i) => {\r\n    return (<option value={i} key={i}>{e.type}</option>);\r\n  });\r\n\r\n  const card_body = (\r\n    <div>\r\n      <div className=\"row w-100\">\r\n        <div className=\"col-sm-5\">\r\n          <label className='mr-2'>Randomiser</label>\r\n        </div>\r\n        <div className=\"col-sm\">\r\n          <select className='custom-select custom-select-sm' value={current_index} onChange={on_select_randomiser}>\r\n            {randomiser_options}\r\n          </select>\r\n        </div>\r\n        <div className=\"col-sm-1 text-right\"><Help text={\"Type of randomiser to use\"}></Help></div>\r\n      </div>\r\n      <hr></hr>\r\n      <SeedCrystalEditor></SeedCrystalEditor>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"card shadow mb-2\">\r\n      <a href=\"#collapseRandomiserMenu\" className=\"card-header d-block\" data-toggle=\"collapse\" role=\"button\" aria-expanded=\"true\" aria-controls=\"collapseRandomiserMenu\">\r\n        <h6 className=\"m-0 font-weight-bold text-primary\">Randomiser</h6>\r\n      </a>\r\n      <div className=\"collapse show\" id=\"collapseRandomiserMenu\">\r\n        <div className=\"card-body\">\r\n          {card_body}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function SeedCrystalEditor() {\r\n  const dispatch = useDispatch();\r\n  let params = useSelector(state => state.randomiser.current_randomiser.params);\r\n\r\n  function change_param(name, value) {\r\n    dispatch(update_randomiser(name, value));\r\n  }\r\n\r\n  let param_options = Object\r\n    .entries(params)\r\n    .map(([name, param], index) => {\r\n      return RenderAdjustableValue(param, index, name, value => {\r\n        change_param(name, value);\r\n      })\r\n    });\r\n\r\n  return (\r\n    <form>\r\n      {param_options}\r\n    </form>\r\n  );\r\n}","import React from 'react';\r\n\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport { create_preinit_reducer } from './ui/reducers';\r\nimport { Provider, useSelector } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { SimulationView } from './ui/components/SimulationView/SimulationView';\r\nimport { EntryBrowser } from './ui/components/EntryBrowser/EntryBrowser';\r\nimport { ShaderMenu } from './ui/components/ShaderMenu';\r\nimport { SizeChanger } from './ui/components/SizeChanger';\r\nimport { Statistics } from './ui/components/Statistics';\r\nimport { RandomiserMenu } from './ui/components/Randomiser';\r\n\r\nexport class App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.store = createStore(\r\n      create_preinit_reducer(),\r\n      compose(\r\n        applyMiddleware(thunk),\r\n        // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\r\n      )\r\n    );\r\n\r\n    this.canvas = React.createRef();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Provider store={this.store}>\r\n        <Main canvas={this.canvas}></Main>\r\n      </Provider>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nfunction Main(props) {\r\n  const app = useSelector(store => store.app);\r\n  const fullscreen = useSelector(store => store.gui.fullscreen);\r\n  \r\n  function render_left_panel() {\r\n    return (\r\n      <div className={`col-sm-3 overflow-auto vh-100 ${fullscreen && 'd-none'}`}>\r\n        <SizeChanger></SizeChanger>\r\n        <ShaderMenu></ShaderMenu>\r\n        <RandomiserMenu></RandomiserMenu>\r\n        <Statistics></Statistics>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function render_right_panel() {\r\n    return (\r\n      <div className={`col-sm-3 overflow-auto vh-100 ${fullscreen && 'd-none'}`}>\r\n        <EntryBrowser></EntryBrowser>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const canvas = <SimulationView canvas={props.canvas}></SimulationView>;\r\n\r\n  return (\r\n    <div className=\"vh-100 vw-100\">\r\n      <div className=\"row px-0 mx-0\">\r\n        {app && render_left_panel()}\r\n        <div className=\"col vh-100 mx-0 px-0\">{canvas}</div>\r\n        {app && render_right_panel()}\r\n      </div>\r\n    </div>\r\n  );\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n  <App></App>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.unregister();\r\n// serviceWorker.register();"],"sourceRoot":""}